<?php

/**
 * Base class that represents a row from the 'calidadcantidadagua' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 07/28/10 12:35:36
 *
 * @package    lib.model.om
 */
abstract class BaseCalidadcantidadagua extends BaseObject  implements Persistent {


	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        CalidadcantidadaguaPeer
	 */
	protected static $peer;

	/**
	 * The value for the cca_id field.
	 * @var        int
	 */
	protected $cca_id;

	/**
	 * The value for the cca_mic_id field.
	 * @var        int
	 */
	protected $cca_mic_id;

	/**
	 * The value for the cca_actividades_agricola_cultivos_permanentes field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_cultivos_permanentes;

	/**
	 * The value for the cca_actividades_agricola_cultivos_semipermanentes field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_cultivos_semipermanentes;

	/**
	 * The value for the cca_actividades_agricola_temporales field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_temporales;

	/**
	 * The value for the cca_actividad_pecuaria_ganaderia_bobina field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_ganaderia_bobina;

	/**
	 * The value for the cca_actividad_pecuaria_ganaderia_equina field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_ganaderia_equina;

	/**
	 * The value for the cca_actividad_pecuaria_porcicultura field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_porcicultura;

	/**
	 * The value for the cca_actividad_pecuaria_capricultura_ovinos field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_capricultura_ovinos;

	/**
	 * The value for the cca_actividad_pecuaria_avicultura field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_avicultura;

	/**
	 * The value for the cca_actividad_pecuaria_piscicultura field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_piscicultura;

	/**
	 * The value for the cca_actividad_pecuaria_otros_cual field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_otros_cual;

	/**
	 * The value for the cca_control_plagas_enfermedades_quimico field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_quimico;

	/**
	 * The value for the cca_control_plagas_enfermedades_organico field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_organico;

	/**
	 * The value for the cca_control_plagas_enfermedades_biologico field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_biologico;

	/**
	 * The value for the cca_control_plagas_enfermedades_ninguno field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_ninguno;

	/**
	 * The value for the cca_fertilizacion_cultivos_quimico field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_quimico;

	/**
	 * The value for the cca_fertilizacion_cultivos_organico field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_organico;

	/**
	 * The value for the cca_fertilizacion_cultivos_ninguno field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_ninguno;

	/**
	 * The value for the cca_capacitacion_dada_prestador field.
	 * @var        string
	 */
	protected $cca_capacitacion_dada_prestador;

	/**
	 * The value for the cca_control_malezas_quimico field.
	 * @var        string
	 */
	protected $cca_control_malezas_quimico;

	/**
	 * The value for the cca_control_malezas_meca_manu field.
	 * @var        string
	 */
	protected $cca_control_malezas_meca_manu;

	/**
	 * The value for the cca_control_malezas_organico field.
	 * @var        string
	 */
	protected $cca_control_malezas_organico;

	/**
	 * The value for the cca_control_malezas_ninguno field.
	 * @var        string
	 */
	protected $cca_control_malezas_ninguno;

	/**
	 * The value for the cca_mineria field.
	 * @var        string
	 */
	protected $cca_mineria;

	/**
	 * The value for the cca_erosion field.
	 * @var        string
	 */
	protected $cca_erosion;

	/**
	 * The value for the cca_modificaciones_paisaje_construcion_vias field.
	 * @var        string
	 */
	protected $cca_modificaciones_paisaje_construcion_vias;

	/**
	 * The value for the cca_modificaciones_paisaje_construcion_vivienda field.
	 * @var        string
	 */
	protected $cca_modificaciones_paisaje_construcion_vivienda;

	/**
	 * The value for the cca_modificaciones_paisaje_construcion_otro field.
	 * @var        string
	 */
	protected $cca_modificaciones_paisaje_construcion_otro;

	/**
	 * The value for the cca_descargas_vivienda_liquido field.
	 * @var        string
	 */
	protected $cca_descargas_vivienda_liquido;

	/**
	 * The value for the cca_descargas_vivienda_solido field.
	 * @var        string
	 */
	protected $cca_descargas_vivienda_solido;

	/**
	 * The value for the cca_descarga_actividad_productiva_agricola field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_agricola;

	/**
	 * The value for the cca_descarga_actividad_productiva_pecuaria field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_pecuaria;

	/**
	 * The value for the cca_descarga_actividad_productiva_minera field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_minera;

	/**
	 * The value for the cca_descarga_actividad_productiva_industrial field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_industrial;

	/**
	 * The value for the cca_descarga_actividad_productiva_otra field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_otra;

	/**
	 * The value for the cca_actividades_agricola_mayor_area field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_mayor_area;

	/**
	 * The value for the cca_actividades_agricola_cultivos_permanentes_tendencia field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_cultivos_permanentes_tendencia;

	/**
	 * The value for the cca_actividades_agricola_cultivos_semipermanentes_tendencia field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_cultivos_semipermanentes_tendencia;

	/**
	 * The value for the cca_actividades_agricola_temporales_tendencia field.
	 * @var        string
	 */
	protected $cca_actividades_agricola_temporales_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_mayor_area field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_mayor_area;

	/**
	 * The value for the cca_actividad_pecuaria_ganaderia_bobina_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_ganaderia_bobina_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_ganaderia_equina_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_ganaderia_equina_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_porcicultura_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_porcicultura_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_capricultura_ovinos_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_capricultura_ovinos_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_avicultura_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_avicultura_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_piscicultura_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_piscicultura_tendencia;

	/**
	 * The value for the cca_actividad_pecuaria_otros_cual_tendencia field.
	 * @var        string
	 */
	protected $cca_actividad_pecuaria_otros_cual_tendencia;

	/**
	 * The value for the cca_control_plagas_enfermedades_mas_usado field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_mas_usado;

	/**
	 * The value for the cca_control_plagas_enfermedades_quimico_tendencia field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_quimico_tendencia;

	/**
	 * The value for the cca_control_plagas_enfermedades_organico_tendencia field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_organico_tendencia;

	/**
	 * The value for the cca_control_plagas_enfermedades_biologico_tendencia field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_biologico_tendencia;

	/**
	 * The value for the cca_control_plagas_enfermedades_ninguno_tendencia field.
	 * @var        string
	 */
	protected $cca_control_plagas_enfermedades_ninguno_tendencia;

	/**
	 * The value for the cca_fertilizacion_cultivos_mas_usado field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_mas_usado;

	/**
	 * The value for the cca_fertilizacion_cultivos_quimico_tendencia field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_quimico_tendencia;

	/**
	 * The value for the cca_fertilizacion_cultivos_organico_tendencia field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_organico_tendencia;

	/**
	 * The value for the cca_fertilizacion_cultivos_ninguno_tendencia field.
	 * @var        string
	 */
	protected $cca_fertilizacion_cultivos_ninguno_tendencia;

	/**
	 * The value for the cca_control_malezas_mas_usado field.
	 * @var        string
	 */
	protected $cca_control_malezas_mas_usado;

	/**
	 * The value for the cca_control_malezas_quimico_tendencia field.
	 * @var        string
	 */
	protected $cca_control_malezas_quimico_tendencia;

	/**
	 * The value for the cca_control_malezas_meca_manu_tendencia field.
	 * @var        string
	 */
	protected $cca_control_malezas_meca_manu_tendencia;

	/**
	 * The value for the cca_control_malezas_organico_tendencia field.
	 * @var        string
	 */
	protected $cca_control_malezas_organico_tendencia;

	/**
	 * The value for the cca_control_malezas_ninguno_tendencia field.
	 * @var        string
	 */
	protected $cca_control_malezas_ninguno_tendencia;

	/**
	 * The value for the cca_mineria_tendencia field.
	 * @var        string
	 */
	protected $cca_mineria_tendencia;

	/**
	 * The value for the cca_erosion_tendencia field.
	 * @var        string
	 */
	protected $cca_erosion_tendencia;

	/**
	 * The value for the cca_modificaciones_paisaje_construcion_vias_tendencia field.
	 * @var        string
	 */
	protected $cca_modificaciones_paisaje_construcion_vias_tendencia;

	/**
	 * The value for the cca_modificaciones_paisaje_construcion_vivienda_tendencia field.
	 * @var        string
	 */
	protected $cca_modificaciones_paisaje_construcion_vivienda_tendencia;

	/**
	 * The value for the cca_modificaciones_paisaje_construcion_otro_tendencia field.
	 * @var        string
	 */
	protected $cca_modificaciones_paisaje_construcion_otro_tendencia;

	/**
	 * The value for the cca_descarga_actividad_productiva_agricola_tendencia field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_agricola_tendencia;

	/**
	 * The value for the cca_descarga_actividad_productiva_pecuaria_tendencia field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_pecuaria_tendencia;

	/**
	 * The value for the cca_descarga_actividad_productiva_minera_tendencia field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_minera_tendencia;

	/**
	 * The value for the cca_descarga_actividad_productiva_industrial_tendencia field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_industrial_tendencia;

	/**
	 * The value for the cca_descarga_actividad_productiva_otra_tendencia field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_otra_tendencia;

	/**
	 * The value for the cca_descarga_actividad_productiva_agricola_espe field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_agricola_espe;

	/**
	 * The value for the cca_descarga_actividad_productiva_pecuaria_espe field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_pecuaria_espe;

	/**
	 * The value for the cca_descarga_actividad_productiva_minera_espe field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_minera_espe;

	/**
	 * The value for the cca_descarga_actividad_productiva_industrial_espe field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_industrial_espe;

	/**
	 * The value for the cca_descarga_actividad_productiva_otra_espe field.
	 * @var        string
	 */
	protected $cca_descarga_actividad_productiva_otra_espe;

	/**
	 * @var        Microcuencas
	 */
	protected $aMicrocuencas;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	// symfony behavior
	
	const PEER = 'CalidadcantidadaguaPeer';

	/**
	 * Get the [cca_id] column value.
	 * 
	 * @return     int
	 */
	public function getCcaId()
	{
		return $this->cca_id;
	}

	/**
	 * Get the [cca_mic_id] column value.
	 * 
	 * @return     int
	 */
	public function getCcaMicId()
	{
		return $this->cca_mic_id;
	}

	/**
	 * Get the [cca_actividades_agricola_cultivos_permanentes] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaCultivosPermanentes()
	{
		return $this->cca_actividades_agricola_cultivos_permanentes;
	}

	/**
	 * Get the [cca_actividades_agricola_cultivos_semipermanentes] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaCultivosSemipermanentes()
	{
		return $this->cca_actividades_agricola_cultivos_semipermanentes;
	}

	/**
	 * Get the [cca_actividades_agricola_temporales] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaTemporales()
	{
		return $this->cca_actividades_agricola_temporales;
	}

	/**
	 * Get the [cca_actividad_pecuaria_ganaderia_bobina] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaGanaderiaBobina()
	{
		return $this->cca_actividad_pecuaria_ganaderia_bobina;
	}

	/**
	 * Get the [cca_actividad_pecuaria_ganaderia_equina] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaGanaderiaEquina()
	{
		return $this->cca_actividad_pecuaria_ganaderia_equina;
	}

	/**
	 * Get the [cca_actividad_pecuaria_porcicultura] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaPorcicultura()
	{
		return $this->cca_actividad_pecuaria_porcicultura;
	}

	/**
	 * Get the [cca_actividad_pecuaria_capricultura_ovinos] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaCapriculturaOvinos()
	{
		return $this->cca_actividad_pecuaria_capricultura_ovinos;
	}

	/**
	 * Get the [cca_actividad_pecuaria_avicultura] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaAvicultura()
	{
		return $this->cca_actividad_pecuaria_avicultura;
	}

	/**
	 * Get the [cca_actividad_pecuaria_piscicultura] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaPiscicultura()
	{
		return $this->cca_actividad_pecuaria_piscicultura;
	}

	/**
	 * Get the [cca_actividad_pecuaria_otros_cual] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaOtrosCual()
	{
		return $this->cca_actividad_pecuaria_otros_cual;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_quimico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesQuimico()
	{
		return $this->cca_control_plagas_enfermedades_quimico;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_organico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesOrganico()
	{
		return $this->cca_control_plagas_enfermedades_organico;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_biologico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesBiologico()
	{
		return $this->cca_control_plagas_enfermedades_biologico;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_ninguno] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesNinguno()
	{
		return $this->cca_control_plagas_enfermedades_ninguno;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_quimico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosQuimico()
	{
		return $this->cca_fertilizacion_cultivos_quimico;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_organico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosOrganico()
	{
		return $this->cca_fertilizacion_cultivos_organico;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_ninguno] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosNinguno()
	{
		return $this->cca_fertilizacion_cultivos_ninguno;
	}

	/**
	 * Get the [cca_capacitacion_dada_prestador] column value.
	 * 
	 * @return     string
	 */
	public function getCcaCapacitacionDadaPrestador()
	{
		return $this->cca_capacitacion_dada_prestador;
	}

	/**
	 * Get the [cca_control_malezas_quimico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasQuimico()
	{
		return $this->cca_control_malezas_quimico;
	}

	/**
	 * Get the [cca_control_malezas_meca_manu] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasMecaManu()
	{
		return $this->cca_control_malezas_meca_manu;
	}

	/**
	 * Get the [cca_control_malezas_organico] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasOrganico()
	{
		return $this->cca_control_malezas_organico;
	}

	/**
	 * Get the [cca_control_malezas_ninguno] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasNinguno()
	{
		return $this->cca_control_malezas_ninguno;
	}

	/**
	 * Get the [cca_mineria] column value.
	 * 
	 * @return     string
	 */
	public function getCcaMineria()
	{
		return $this->cca_mineria;
	}

	/**
	 * Get the [cca_erosion] column value.
	 * 
	 * @return     string
	 */
	public function getCcaErosion()
	{
		return $this->cca_erosion;
	}

	/**
	 * Get the [cca_modificaciones_paisaje_construcion_vias] column value.
	 * 
	 * @return     string
	 */
	public function getCcaModificacionesPaisajeConstrucionVias()
	{
		return $this->cca_modificaciones_paisaje_construcion_vias;
	}

	/**
	 * Get the [cca_modificaciones_paisaje_construcion_vivienda] column value.
	 * 
	 * @return     string
	 */
	public function getCcaModificacionesPaisajeConstrucionVivienda()
	{
		return $this->cca_modificaciones_paisaje_construcion_vivienda;
	}

	/**
	 * Get the [cca_modificaciones_paisaje_construcion_otro] column value.
	 * 
	 * @return     string
	 */
	public function getCcaModificacionesPaisajeConstrucionOtro()
	{
		return $this->cca_modificaciones_paisaje_construcion_otro;
	}

	/**
	 * Get the [cca_descargas_vivienda_liquido] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargasViviendaLiquido()
	{
		return $this->cca_descargas_vivienda_liquido;
	}

	/**
	 * Get the [cca_descargas_vivienda_solido] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargasViviendaSolido()
	{
		return $this->cca_descargas_vivienda_solido;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_agricola] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaAgricola()
	{
		return $this->cca_descarga_actividad_productiva_agricola;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_pecuaria] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaPecuaria()
	{
		return $this->cca_descarga_actividad_productiva_pecuaria;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_minera] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaMinera()
	{
		return $this->cca_descarga_actividad_productiva_minera;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_industrial] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaIndustrial()
	{
		return $this->cca_descarga_actividad_productiva_industrial;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_otra] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaOtra()
	{
		return $this->cca_descarga_actividad_productiva_otra;
	}

	/**
	 * Get the [cca_actividades_agricola_mayor_area] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaMayorArea()
	{
		return $this->cca_actividades_agricola_mayor_area;
	}

	/**
	 * Get the [cca_actividades_agricola_cultivos_permanentes_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaCultivosPermanentesTendencia()
	{
		return $this->cca_actividades_agricola_cultivos_permanentes_tendencia;
	}

	/**
	 * Get the [cca_actividades_agricola_cultivos_semipermanentes_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaCultivosSemipermanentesTendencia()
	{
		return $this->cca_actividades_agricola_cultivos_semipermanentes_tendencia;
	}

	/**
	 * Get the [cca_actividades_agricola_temporales_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadesAgricolaTemporalesTendencia()
	{
		return $this->cca_actividades_agricola_temporales_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_mayor_area] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaMayorArea()
	{
		return $this->cca_actividad_pecuaria_mayor_area;
	}

	/**
	 * Get the [cca_actividad_pecuaria_ganaderia_bobina_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaGanaderiaBobinaTendencia()
	{
		return $this->cca_actividad_pecuaria_ganaderia_bobina_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_ganaderia_equina_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaGanaderiaEquinaTendencia()
	{
		return $this->cca_actividad_pecuaria_ganaderia_equina_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_porcicultura_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaPorciculturaTendencia()
	{
		return $this->cca_actividad_pecuaria_porcicultura_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_capricultura_ovinos_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaCapriculturaOvinosTendencia()
	{
		return $this->cca_actividad_pecuaria_capricultura_ovinos_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_avicultura_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaAviculturaTendencia()
	{
		return $this->cca_actividad_pecuaria_avicultura_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_piscicultura_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaPisciculturaTendencia()
	{
		return $this->cca_actividad_pecuaria_piscicultura_tendencia;
	}

	/**
	 * Get the [cca_actividad_pecuaria_otros_cual_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaActividadPecuariaOtrosCualTendencia()
	{
		return $this->cca_actividad_pecuaria_otros_cual_tendencia;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_mas_usado] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesMasUsado()
	{
		return $this->cca_control_plagas_enfermedades_mas_usado;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_quimico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesQuimicoTendencia()
	{
		return $this->cca_control_plagas_enfermedades_quimico_tendencia;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_organico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesOrganicoTendencia()
	{
		return $this->cca_control_plagas_enfermedades_organico_tendencia;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_biologico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesBiologicoTendencia()
	{
		return $this->cca_control_plagas_enfermedades_biologico_tendencia;
	}

	/**
	 * Get the [cca_control_plagas_enfermedades_ninguno_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlPlagasEnfermedadesNingunoTendencia()
	{
		return $this->cca_control_plagas_enfermedades_ninguno_tendencia;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_mas_usado] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosMasUsado()
	{
		return $this->cca_fertilizacion_cultivos_mas_usado;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_quimico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosQuimicoTendencia()
	{
		return $this->cca_fertilizacion_cultivos_quimico_tendencia;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_organico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosOrganicoTendencia()
	{
		return $this->cca_fertilizacion_cultivos_organico_tendencia;
	}

	/**
	 * Get the [cca_fertilizacion_cultivos_ninguno_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaFertilizacionCultivosNingunoTendencia()
	{
		return $this->cca_fertilizacion_cultivos_ninguno_tendencia;
	}

	/**
	 * Get the [cca_control_malezas_mas_usado] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasMasUsado()
	{
		return $this->cca_control_malezas_mas_usado;
	}

	/**
	 * Get the [cca_control_malezas_quimico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasQuimicoTendencia()
	{
		return $this->cca_control_malezas_quimico_tendencia;
	}

	/**
	 * Get the [cca_control_malezas_meca_manu_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasMecaManuTendencia()
	{
		return $this->cca_control_malezas_meca_manu_tendencia;
	}

	/**
	 * Get the [cca_control_malezas_organico_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasOrganicoTendencia()
	{
		return $this->cca_control_malezas_organico_tendencia;
	}

	/**
	 * Get the [cca_control_malezas_ninguno_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaControlMalezasNingunoTendencia()
	{
		return $this->cca_control_malezas_ninguno_tendencia;
	}

	/**
	 * Get the [cca_mineria_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaMineriaTendencia()
	{
		return $this->cca_mineria_tendencia;
	}

	/**
	 * Get the [cca_erosion_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaErosionTendencia()
	{
		return $this->cca_erosion_tendencia;
	}

	/**
	 * Get the [cca_modificaciones_paisaje_construcion_vias_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaModificacionesPaisajeConstrucionViasTendencia()
	{
		return $this->cca_modificaciones_paisaje_construcion_vias_tendencia;
	}

	/**
	 * Get the [cca_modificaciones_paisaje_construcion_vivienda_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaModificacionesPaisajeConstrucionViviendaTendencia()
	{
		return $this->cca_modificaciones_paisaje_construcion_vivienda_tendencia;
	}

	/**
	 * Get the [cca_modificaciones_paisaje_construcion_otro_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaModificacionesPaisajeConstrucionOtroTendencia()
	{
		return $this->cca_modificaciones_paisaje_construcion_otro_tendencia;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_agricola_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaAgricolaTendencia()
	{
		return $this->cca_descarga_actividad_productiva_agricola_tendencia;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_pecuaria_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaPecuariaTendencia()
	{
		return $this->cca_descarga_actividad_productiva_pecuaria_tendencia;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_minera_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaMineraTendencia()
	{
		return $this->cca_descarga_actividad_productiva_minera_tendencia;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_industrial_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaIndustrialTendencia()
	{
		return $this->cca_descarga_actividad_productiva_industrial_tendencia;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_otra_tendencia] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaOtraTendencia()
	{
		return $this->cca_descarga_actividad_productiva_otra_tendencia;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_agricola_espe] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaAgricolaEspe()
	{
		return $this->cca_descarga_actividad_productiva_agricola_espe;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_pecuaria_espe] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaPecuariaEspe()
	{
		return $this->cca_descarga_actividad_productiva_pecuaria_espe;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_minera_espe] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaMineraEspe()
	{
		return $this->cca_descarga_actividad_productiva_minera_espe;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_industrial_espe] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaIndustrialEspe()
	{
		return $this->cca_descarga_actividad_productiva_industrial_espe;
	}

	/**
	 * Get the [cca_descarga_actividad_productiva_otra_espe] column value.
	 * 
	 * @return     string
	 */
	public function getCcaDescargaActividadProductivaOtraEspe()
	{
		return $this->cca_descarga_actividad_productiva_otra_espe;
	}

	/**
	 * Set the value of [cca_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->cca_id !== $v) {
			$this->cca_id = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ID;
		}

		return $this;
	} // setCcaId()

	/**
	 * Set the value of [cca_mic_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaMicId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->cca_mic_id !== $v) {
			$this->cca_mic_id = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MIC_ID;
		}

		if ($this->aMicrocuencas !== null && $this->aMicrocuencas->getMicId() !== $v) {
			$this->aMicrocuencas = null;
		}

		return $this;
	} // setCcaMicId()

	/**
	 * Set the value of [cca_actividades_agricola_cultivos_permanentes] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaCultivosPermanentes($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_cultivos_permanentes !== $v) {
			$this->cca_actividades_agricola_cultivos_permanentes = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_PERMANENTES;
		}

		return $this;
	} // setCcaActividadesAgricolaCultivosPermanentes()

	/**
	 * Set the value of [cca_actividades_agricola_cultivos_semipermanentes] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaCultivosSemipermanentes($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_cultivos_semipermanentes !== $v) {
			$this->cca_actividades_agricola_cultivos_semipermanentes = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_SEMIPERMANENTES;
		}

		return $this;
	} // setCcaActividadesAgricolaCultivosSemipermanentes()

	/**
	 * Set the value of [cca_actividades_agricola_temporales] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaTemporales($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_temporales !== $v) {
			$this->cca_actividades_agricola_temporales = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_TEMPORALES;
		}

		return $this;
	} // setCcaActividadesAgricolaTemporales()

	/**
	 * Set the value of [cca_actividad_pecuaria_ganaderia_bobina] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaGanaderiaBobina($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_ganaderia_bobina !== $v) {
			$this->cca_actividad_pecuaria_ganaderia_bobina = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_BOBINA;
		}

		return $this;
	} // setCcaActividadPecuariaGanaderiaBobina()

	/**
	 * Set the value of [cca_actividad_pecuaria_ganaderia_equina] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaGanaderiaEquina($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_ganaderia_equina !== $v) {
			$this->cca_actividad_pecuaria_ganaderia_equina = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_EQUINA;
		}

		return $this;
	} // setCcaActividadPecuariaGanaderiaEquina()

	/**
	 * Set the value of [cca_actividad_pecuaria_porcicultura] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaPorcicultura($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_porcicultura !== $v) {
			$this->cca_actividad_pecuaria_porcicultura = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PORCICULTURA;
		}

		return $this;
	} // setCcaActividadPecuariaPorcicultura()

	/**
	 * Set the value of [cca_actividad_pecuaria_capricultura_ovinos] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaCapriculturaOvinos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_capricultura_ovinos !== $v) {
			$this->cca_actividad_pecuaria_capricultura_ovinos = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_CAPRICULTURA_OVINOS;
		}

		return $this;
	} // setCcaActividadPecuariaCapriculturaOvinos()

	/**
	 * Set the value of [cca_actividad_pecuaria_avicultura] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaAvicultura($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_avicultura !== $v) {
			$this->cca_actividad_pecuaria_avicultura = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_AVICULTURA;
		}

		return $this;
	} // setCcaActividadPecuariaAvicultura()

	/**
	 * Set the value of [cca_actividad_pecuaria_piscicultura] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaPiscicultura($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_piscicultura !== $v) {
			$this->cca_actividad_pecuaria_piscicultura = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PISCICULTURA;
		}

		return $this;
	} // setCcaActividadPecuariaPiscicultura()

	/**
	 * Set the value of [cca_actividad_pecuaria_otros_cual] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaOtrosCual($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_otros_cual !== $v) {
			$this->cca_actividad_pecuaria_otros_cual = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_OTROS_CUAL;
		}

		return $this;
	} // setCcaActividadPecuariaOtrosCual()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_quimico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesQuimico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_quimico !== $v) {
			$this->cca_control_plagas_enfermedades_quimico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_QUIMICO;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesQuimico()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_organico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesOrganico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_organico !== $v) {
			$this->cca_control_plagas_enfermedades_organico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_ORGANICO;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesOrganico()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_biologico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesBiologico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_biologico !== $v) {
			$this->cca_control_plagas_enfermedades_biologico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_BIOLOGICO;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesBiologico()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_ninguno] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesNinguno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_ninguno !== $v) {
			$this->cca_control_plagas_enfermedades_ninguno = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_NINGUNO;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesNinguno()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_quimico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosQuimico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_quimico !== $v) {
			$this->cca_fertilizacion_cultivos_quimico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_QUIMICO;
		}

		return $this;
	} // setCcaFertilizacionCultivosQuimico()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_organico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosOrganico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_organico !== $v) {
			$this->cca_fertilizacion_cultivos_organico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_ORGANICO;
		}

		return $this;
	} // setCcaFertilizacionCultivosOrganico()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_ninguno] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosNinguno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_ninguno !== $v) {
			$this->cca_fertilizacion_cultivos_ninguno = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_NINGUNO;
		}

		return $this;
	} // setCcaFertilizacionCultivosNinguno()

	/**
	 * Set the value of [cca_capacitacion_dada_prestador] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaCapacitacionDadaPrestador($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_capacitacion_dada_prestador !== $v) {
			$this->cca_capacitacion_dada_prestador = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CAPACITACION_DADA_PRESTADOR;
		}

		return $this;
	} // setCcaCapacitacionDadaPrestador()

	/**
	 * Set the value of [cca_control_malezas_quimico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasQuimico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_quimico !== $v) {
			$this->cca_control_malezas_quimico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_QUIMICO;
		}

		return $this;
	} // setCcaControlMalezasQuimico()

	/**
	 * Set the value of [cca_control_malezas_meca_manu] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasMecaManu($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_meca_manu !== $v) {
			$this->cca_control_malezas_meca_manu = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MECA_MANU;
		}

		return $this;
	} // setCcaControlMalezasMecaManu()

	/**
	 * Set the value of [cca_control_malezas_organico] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasOrganico($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_organico !== $v) {
			$this->cca_control_malezas_organico = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_ORGANICO;
		}

		return $this;
	} // setCcaControlMalezasOrganico()

	/**
	 * Set the value of [cca_control_malezas_ninguno] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasNinguno($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_ninguno !== $v) {
			$this->cca_control_malezas_ninguno = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_NINGUNO;
		}

		return $this;
	} // setCcaControlMalezasNinguno()

	/**
	 * Set the value of [cca_mineria] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaMineria($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_mineria !== $v) {
			$this->cca_mineria = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MINERIA;
		}

		return $this;
	} // setCcaMineria()

	/**
	 * Set the value of [cca_erosion] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaErosion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_erosion !== $v) {
			$this->cca_erosion = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_EROSION;
		}

		return $this;
	} // setCcaErosion()

	/**
	 * Set the value of [cca_modificaciones_paisaje_construcion_vias] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaModificacionesPaisajeConstrucionVias($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_modificaciones_paisaje_construcion_vias !== $v) {
			$this->cca_modificaciones_paisaje_construcion_vias = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIAS;
		}

		return $this;
	} // setCcaModificacionesPaisajeConstrucionVias()

	/**
	 * Set the value of [cca_modificaciones_paisaje_construcion_vivienda] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaModificacionesPaisajeConstrucionVivienda($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_modificaciones_paisaje_construcion_vivienda !== $v) {
			$this->cca_modificaciones_paisaje_construcion_vivienda = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIVIENDA;
		}

		return $this;
	} // setCcaModificacionesPaisajeConstrucionVivienda()

	/**
	 * Set the value of [cca_modificaciones_paisaje_construcion_otro] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaModificacionesPaisajeConstrucionOtro($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_modificaciones_paisaje_construcion_otro !== $v) {
			$this->cca_modificaciones_paisaje_construcion_otro = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_OTRO;
		}

		return $this;
	} // setCcaModificacionesPaisajeConstrucionOtro()

	/**
	 * Set the value of [cca_descargas_vivienda_liquido] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargasViviendaLiquido($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descargas_vivienda_liquido !== $v) {
			$this->cca_descargas_vivienda_liquido = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGAS_VIVIENDA_LIQUIDO;
		}

		return $this;
	} // setCcaDescargasViviendaLiquido()

	/**
	 * Set the value of [cca_descargas_vivienda_solido] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargasViviendaSolido($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descargas_vivienda_solido !== $v) {
			$this->cca_descargas_vivienda_solido = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGAS_VIVIENDA_SOLIDO;
		}

		return $this;
	} // setCcaDescargasViviendaSolido()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_agricola] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaAgricola($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_agricola !== $v) {
			$this->cca_descarga_actividad_productiva_agricola = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaAgricola()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_pecuaria] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaPecuaria($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_pecuaria !== $v) {
			$this->cca_descarga_actividad_productiva_pecuaria = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaPecuaria()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_minera] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaMinera($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_minera !== $v) {
			$this->cca_descarga_actividad_productiva_minera = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaMinera()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_industrial] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaIndustrial($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_industrial !== $v) {
			$this->cca_descarga_actividad_productiva_industrial = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL;
		}

		return $this;
	} // setCcaDescargaActividadProductivaIndustrial()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_otra] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaOtra($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_otra !== $v) {
			$this->cca_descarga_actividad_productiva_otra = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaOtra()

	/**
	 * Set the value of [cca_actividades_agricola_mayor_area] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaMayorArea($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_mayor_area !== $v) {
			$this->cca_actividades_agricola_mayor_area = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_MAYOR_AREA;
		}

		return $this;
	} // setCcaActividadesAgricolaMayorArea()

	/**
	 * Set the value of [cca_actividades_agricola_cultivos_permanentes_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaCultivosPermanentesTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_cultivos_permanentes_tendencia !== $v) {
			$this->cca_actividades_agricola_cultivos_permanentes_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_PERMANENTES_TENDENCIA;
		}

		return $this;
	} // setCcaActividadesAgricolaCultivosPermanentesTendencia()

	/**
	 * Set the value of [cca_actividades_agricola_cultivos_semipermanentes_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaCultivosSemipermanentesTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_cultivos_semipermanentes_tendencia !== $v) {
			$this->cca_actividades_agricola_cultivos_semipermanentes_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_SEMIPERMANENTES_TENDENCIA;
		}

		return $this;
	} // setCcaActividadesAgricolaCultivosSemipermanentesTendencia()

	/**
	 * Set the value of [cca_actividades_agricola_temporales_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadesAgricolaTemporalesTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividades_agricola_temporales_tendencia !== $v) {
			$this->cca_actividades_agricola_temporales_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_TEMPORALES_TENDENCIA;
		}

		return $this;
	} // setCcaActividadesAgricolaTemporalesTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_mayor_area] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaMayorArea($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_mayor_area !== $v) {
			$this->cca_actividad_pecuaria_mayor_area = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_MAYOR_AREA;
		}

		return $this;
	} // setCcaActividadPecuariaMayorArea()

	/**
	 * Set the value of [cca_actividad_pecuaria_ganaderia_bobina_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaGanaderiaBobinaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_ganaderia_bobina_tendencia !== $v) {
			$this->cca_actividad_pecuaria_ganaderia_bobina_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_BOBINA_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaGanaderiaBobinaTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_ganaderia_equina_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaGanaderiaEquinaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_ganaderia_equina_tendencia !== $v) {
			$this->cca_actividad_pecuaria_ganaderia_equina_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_EQUINA_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaGanaderiaEquinaTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_porcicultura_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaPorciculturaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_porcicultura_tendencia !== $v) {
			$this->cca_actividad_pecuaria_porcicultura_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PORCICULTURA_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaPorciculturaTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_capricultura_ovinos_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaCapriculturaOvinosTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_capricultura_ovinos_tendencia !== $v) {
			$this->cca_actividad_pecuaria_capricultura_ovinos_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_CAPRICULTURA_OVINOS_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaCapriculturaOvinosTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_avicultura_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaAviculturaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_avicultura_tendencia !== $v) {
			$this->cca_actividad_pecuaria_avicultura_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_AVICULTURA_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaAviculturaTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_piscicultura_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaPisciculturaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_piscicultura_tendencia !== $v) {
			$this->cca_actividad_pecuaria_piscicultura_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PISCICULTURA_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaPisciculturaTendencia()

	/**
	 * Set the value of [cca_actividad_pecuaria_otros_cual_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaActividadPecuariaOtrosCualTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_actividad_pecuaria_otros_cual_tendencia !== $v) {
			$this->cca_actividad_pecuaria_otros_cual_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_OTROS_CUAL_TENDENCIA;
		}

		return $this;
	} // setCcaActividadPecuariaOtrosCualTendencia()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_mas_usado] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesMasUsado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_mas_usado !== $v) {
			$this->cca_control_plagas_enfermedades_mas_usado = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_MAS_USADO;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesMasUsado()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_quimico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesQuimicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_quimico_tendencia !== $v) {
			$this->cca_control_plagas_enfermedades_quimico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_QUIMICO_TENDENCIA;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesQuimicoTendencia()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_organico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesOrganicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_organico_tendencia !== $v) {
			$this->cca_control_plagas_enfermedades_organico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_ORGANICO_TENDENCIA;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesOrganicoTendencia()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_biologico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesBiologicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_biologico_tendencia !== $v) {
			$this->cca_control_plagas_enfermedades_biologico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_BIOLOGICO_TENDENCIA;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesBiologicoTendencia()

	/**
	 * Set the value of [cca_control_plagas_enfermedades_ninguno_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlPlagasEnfermedadesNingunoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_plagas_enfermedades_ninguno_tendencia !== $v) {
			$this->cca_control_plagas_enfermedades_ninguno_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_NINGUNO_TENDENCIA;
		}

		return $this;
	} // setCcaControlPlagasEnfermedadesNingunoTendencia()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_mas_usado] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosMasUsado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_mas_usado !== $v) {
			$this->cca_fertilizacion_cultivos_mas_usado = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_MAS_USADO;
		}

		return $this;
	} // setCcaFertilizacionCultivosMasUsado()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_quimico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosQuimicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_quimico_tendencia !== $v) {
			$this->cca_fertilizacion_cultivos_quimico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_QUIMICO_TENDENCIA;
		}

		return $this;
	} // setCcaFertilizacionCultivosQuimicoTendencia()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_organico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosOrganicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_organico_tendencia !== $v) {
			$this->cca_fertilizacion_cultivos_organico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_ORGANICO_TENDENCIA;
		}

		return $this;
	} // setCcaFertilizacionCultivosOrganicoTendencia()

	/**
	 * Set the value of [cca_fertilizacion_cultivos_ninguno_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaFertilizacionCultivosNingunoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_fertilizacion_cultivos_ninguno_tendencia !== $v) {
			$this->cca_fertilizacion_cultivos_ninguno_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_NINGUNO_TENDENCIA;
		}

		return $this;
	} // setCcaFertilizacionCultivosNingunoTendencia()

	/**
	 * Set the value of [cca_control_malezas_mas_usado] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasMasUsado($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_mas_usado !== $v) {
			$this->cca_control_malezas_mas_usado = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MAS_USADO;
		}

		return $this;
	} // setCcaControlMalezasMasUsado()

	/**
	 * Set the value of [cca_control_malezas_quimico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasQuimicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_quimico_tendencia !== $v) {
			$this->cca_control_malezas_quimico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_QUIMICO_TENDENCIA;
		}

		return $this;
	} // setCcaControlMalezasQuimicoTendencia()

	/**
	 * Set the value of [cca_control_malezas_meca_manu_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasMecaManuTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_meca_manu_tendencia !== $v) {
			$this->cca_control_malezas_meca_manu_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MECA_MANU_TENDENCIA;
		}

		return $this;
	} // setCcaControlMalezasMecaManuTendencia()

	/**
	 * Set the value of [cca_control_malezas_organico_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasOrganicoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_organico_tendencia !== $v) {
			$this->cca_control_malezas_organico_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_ORGANICO_TENDENCIA;
		}

		return $this;
	} // setCcaControlMalezasOrganicoTendencia()

	/**
	 * Set the value of [cca_control_malezas_ninguno_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaControlMalezasNingunoTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_control_malezas_ninguno_tendencia !== $v) {
			$this->cca_control_malezas_ninguno_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_NINGUNO_TENDENCIA;
		}

		return $this;
	} // setCcaControlMalezasNingunoTendencia()

	/**
	 * Set the value of [cca_mineria_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaMineriaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_mineria_tendencia !== $v) {
			$this->cca_mineria_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MINERIA_TENDENCIA;
		}

		return $this;
	} // setCcaMineriaTendencia()

	/**
	 * Set the value of [cca_erosion_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaErosionTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_erosion_tendencia !== $v) {
			$this->cca_erosion_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_EROSION_TENDENCIA;
		}

		return $this;
	} // setCcaErosionTendencia()

	/**
	 * Set the value of [cca_modificaciones_paisaje_construcion_vias_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaModificacionesPaisajeConstrucionViasTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_modificaciones_paisaje_construcion_vias_tendencia !== $v) {
			$this->cca_modificaciones_paisaje_construcion_vias_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIAS_TENDENCIA;
		}

		return $this;
	} // setCcaModificacionesPaisajeConstrucionViasTendencia()

	/**
	 * Set the value of [cca_modificaciones_paisaje_construcion_vivienda_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaModificacionesPaisajeConstrucionViviendaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_modificaciones_paisaje_construcion_vivienda_tendencia !== $v) {
			$this->cca_modificaciones_paisaje_construcion_vivienda_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIVIENDA_TENDENCIA;
		}

		return $this;
	} // setCcaModificacionesPaisajeConstrucionViviendaTendencia()

	/**
	 * Set the value of [cca_modificaciones_paisaje_construcion_otro_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaModificacionesPaisajeConstrucionOtroTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_modificaciones_paisaje_construcion_otro_tendencia !== $v) {
			$this->cca_modificaciones_paisaje_construcion_otro_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_OTRO_TENDENCIA;
		}

		return $this;
	} // setCcaModificacionesPaisajeConstrucionOtroTendencia()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_agricola_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaAgricolaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_agricola_tendencia !== $v) {
			$this->cca_descarga_actividad_productiva_agricola_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA_TENDENCIA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaAgricolaTendencia()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_pecuaria_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaPecuariaTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_pecuaria_tendencia !== $v) {
			$this->cca_descarga_actividad_productiva_pecuaria_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA_TENDENCIA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaPecuariaTendencia()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_minera_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaMineraTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_minera_tendencia !== $v) {
			$this->cca_descarga_actividad_productiva_minera_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA_TENDENCIA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaMineraTendencia()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_industrial_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaIndustrialTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_industrial_tendencia !== $v) {
			$this->cca_descarga_actividad_productiva_industrial_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL_TENDENCIA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaIndustrialTendencia()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_otra_tendencia] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaOtraTendencia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_otra_tendencia !== $v) {
			$this->cca_descarga_actividad_productiva_otra_tendencia = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA_TENDENCIA;
		}

		return $this;
	} // setCcaDescargaActividadProductivaOtraTendencia()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_agricola_espe] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaAgricolaEspe($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_agricola_espe !== $v) {
			$this->cca_descarga_actividad_productiva_agricola_espe = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA_ESPE;
		}

		return $this;
	} // setCcaDescargaActividadProductivaAgricolaEspe()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_pecuaria_espe] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaPecuariaEspe($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_pecuaria_espe !== $v) {
			$this->cca_descarga_actividad_productiva_pecuaria_espe = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA_ESPE;
		}

		return $this;
	} // setCcaDescargaActividadProductivaPecuariaEspe()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_minera_espe] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaMineraEspe($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_minera_espe !== $v) {
			$this->cca_descarga_actividad_productiva_minera_espe = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA_ESPE;
		}

		return $this;
	} // setCcaDescargaActividadProductivaMineraEspe()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_industrial_espe] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaIndustrialEspe($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_industrial_espe !== $v) {
			$this->cca_descarga_actividad_productiva_industrial_espe = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL_ESPE;
		}

		return $this;
	} // setCcaDescargaActividadProductivaIndustrialEspe()

	/**
	 * Set the value of [cca_descarga_actividad_productiva_otra_espe] column.
	 * 
	 * @param      string $v new value
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 */
	public function setCcaDescargaActividadProductivaOtraEspe($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cca_descarga_actividad_productiva_otra_espe !== $v) {
			$this->cca_descarga_actividad_productiva_otra_espe = $v;
			$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA_ESPE;
		}

		return $this;
	} // setCcaDescargaActividadProductivaOtraEspe()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->cca_id = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->cca_mic_id = ($row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			$this->cca_actividades_agricola_cultivos_permanentes = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->cca_actividades_agricola_cultivos_semipermanentes = ($row[$startcol + 3] !== null) ? (string) $row[$startcol + 3] : null;
			$this->cca_actividades_agricola_temporales = ($row[$startcol + 4] !== null) ? (string) $row[$startcol + 4] : null;
			$this->cca_actividad_pecuaria_ganaderia_bobina = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->cca_actividad_pecuaria_ganaderia_equina = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->cca_actividad_pecuaria_porcicultura = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->cca_actividad_pecuaria_capricultura_ovinos = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->cca_actividad_pecuaria_avicultura = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->cca_actividad_pecuaria_piscicultura = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->cca_actividad_pecuaria_otros_cual = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->cca_control_plagas_enfermedades_quimico = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->cca_control_plagas_enfermedades_organico = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->cca_control_plagas_enfermedades_biologico = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->cca_control_plagas_enfermedades_ninguno = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->cca_fertilizacion_cultivos_quimico = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->cca_fertilizacion_cultivos_organico = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->cca_fertilizacion_cultivos_ninguno = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->cca_capacitacion_dada_prestador = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->cca_control_malezas_quimico = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->cca_control_malezas_meca_manu = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->cca_control_malezas_organico = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->cca_control_malezas_ninguno = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->cca_mineria = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->cca_erosion = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->cca_modificaciones_paisaje_construcion_vias = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->cca_modificaciones_paisaje_construcion_vivienda = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->cca_modificaciones_paisaje_construcion_otro = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->cca_descargas_vivienda_liquido = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->cca_descargas_vivienda_solido = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->cca_descarga_actividad_productiva_agricola = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->cca_descarga_actividad_productiva_pecuaria = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->cca_descarga_actividad_productiva_minera = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->cca_descarga_actividad_productiva_industrial = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->cca_descarga_actividad_productiva_otra = ($row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->cca_actividades_agricola_mayor_area = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->cca_actividades_agricola_cultivos_permanentes_tendencia = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->cca_actividades_agricola_cultivos_semipermanentes_tendencia = ($row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->cca_actividades_agricola_temporales_tendencia = ($row[$startcol + 39] !== null) ? (string) $row[$startcol + 39] : null;
			$this->cca_actividad_pecuaria_mayor_area = ($row[$startcol + 40] !== null) ? (string) $row[$startcol + 40] : null;
			$this->cca_actividad_pecuaria_ganaderia_bobina_tendencia = ($row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->cca_actividad_pecuaria_ganaderia_equina_tendencia = ($row[$startcol + 42] !== null) ? (string) $row[$startcol + 42] : null;
			$this->cca_actividad_pecuaria_porcicultura_tendencia = ($row[$startcol + 43] !== null) ? (string) $row[$startcol + 43] : null;
			$this->cca_actividad_pecuaria_capricultura_ovinos_tendencia = ($row[$startcol + 44] !== null) ? (string) $row[$startcol + 44] : null;
			$this->cca_actividad_pecuaria_avicultura_tendencia = ($row[$startcol + 45] !== null) ? (string) $row[$startcol + 45] : null;
			$this->cca_actividad_pecuaria_piscicultura_tendencia = ($row[$startcol + 46] !== null) ? (string) $row[$startcol + 46] : null;
			$this->cca_actividad_pecuaria_otros_cual_tendencia = ($row[$startcol + 47] !== null) ? (string) $row[$startcol + 47] : null;
			$this->cca_control_plagas_enfermedades_mas_usado = ($row[$startcol + 48] !== null) ? (string) $row[$startcol + 48] : null;
			$this->cca_control_plagas_enfermedades_quimico_tendencia = ($row[$startcol + 49] !== null) ? (string) $row[$startcol + 49] : null;
			$this->cca_control_plagas_enfermedades_organico_tendencia = ($row[$startcol + 50] !== null) ? (string) $row[$startcol + 50] : null;
			$this->cca_control_plagas_enfermedades_biologico_tendencia = ($row[$startcol + 51] !== null) ? (string) $row[$startcol + 51] : null;
			$this->cca_control_plagas_enfermedades_ninguno_tendencia = ($row[$startcol + 52] !== null) ? (string) $row[$startcol + 52] : null;
			$this->cca_fertilizacion_cultivos_mas_usado = ($row[$startcol + 53] !== null) ? (string) $row[$startcol + 53] : null;
			$this->cca_fertilizacion_cultivos_quimico_tendencia = ($row[$startcol + 54] !== null) ? (string) $row[$startcol + 54] : null;
			$this->cca_fertilizacion_cultivos_organico_tendencia = ($row[$startcol + 55] !== null) ? (string) $row[$startcol + 55] : null;
			$this->cca_fertilizacion_cultivos_ninguno_tendencia = ($row[$startcol + 56] !== null) ? (string) $row[$startcol + 56] : null;
			$this->cca_control_malezas_mas_usado = ($row[$startcol + 57] !== null) ? (string) $row[$startcol + 57] : null;
			$this->cca_control_malezas_quimico_tendencia = ($row[$startcol + 58] !== null) ? (string) $row[$startcol + 58] : null;
			$this->cca_control_malezas_meca_manu_tendencia = ($row[$startcol + 59] !== null) ? (string) $row[$startcol + 59] : null;
			$this->cca_control_malezas_organico_tendencia = ($row[$startcol + 60] !== null) ? (string) $row[$startcol + 60] : null;
			$this->cca_control_malezas_ninguno_tendencia = ($row[$startcol + 61] !== null) ? (string) $row[$startcol + 61] : null;
			$this->cca_mineria_tendencia = ($row[$startcol + 62] !== null) ? (string) $row[$startcol + 62] : null;
			$this->cca_erosion_tendencia = ($row[$startcol + 63] !== null) ? (string) $row[$startcol + 63] : null;
			$this->cca_modificaciones_paisaje_construcion_vias_tendencia = ($row[$startcol + 64] !== null) ? (string) $row[$startcol + 64] : null;
			$this->cca_modificaciones_paisaje_construcion_vivienda_tendencia = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->cca_modificaciones_paisaje_construcion_otro_tendencia = ($row[$startcol + 66] !== null) ? (string) $row[$startcol + 66] : null;
			$this->cca_descarga_actividad_productiva_agricola_tendencia = ($row[$startcol + 67] !== null) ? (string) $row[$startcol + 67] : null;
			$this->cca_descarga_actividad_productiva_pecuaria_tendencia = ($row[$startcol + 68] !== null) ? (string) $row[$startcol + 68] : null;
			$this->cca_descarga_actividad_productiva_minera_tendencia = ($row[$startcol + 69] !== null) ? (string) $row[$startcol + 69] : null;
			$this->cca_descarga_actividad_productiva_industrial_tendencia = ($row[$startcol + 70] !== null) ? (string) $row[$startcol + 70] : null;
			$this->cca_descarga_actividad_productiva_otra_tendencia = ($row[$startcol + 71] !== null) ? (string) $row[$startcol + 71] : null;
			$this->cca_descarga_actividad_productiva_agricola_espe = ($row[$startcol + 72] !== null) ? (string) $row[$startcol + 72] : null;
			$this->cca_descarga_actividad_productiva_pecuaria_espe = ($row[$startcol + 73] !== null) ? (string) $row[$startcol + 73] : null;
			$this->cca_descarga_actividad_productiva_minera_espe = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->cca_descarga_actividad_productiva_industrial_espe = ($row[$startcol + 75] !== null) ? (string) $row[$startcol + 75] : null;
			$this->cca_descarga_actividad_productiva_otra_espe = ($row[$startcol + 76] !== null) ? (string) $row[$startcol + 76] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 77; // 77 = CalidadcantidadaguaPeer::NUM_COLUMNS - CalidadcantidadaguaPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Calidadcantidadagua object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

		if ($this->aMicrocuencas !== null && $this->cca_mic_id !== $this->aMicrocuencas->getMicId()) {
			$this->aMicrocuencas = null;
		}
	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(CalidadcantidadaguaPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = CalidadcantidadaguaPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

			$this->aMicrocuencas = null;
		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(CalidadcantidadaguaPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$ret = $this->preDelete($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseCalidadcantidadagua:delete:pre') as $callable)
			{
			  if (call_user_func($callable, $this, $con))
			  {
			    $con->commit();
			
			    return;
			  }
			}

			if ($ret) {
				CalidadcantidadaguaPeer::doDelete($this, $con);
				$this->postDelete($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseCalidadcantidadagua:delete:post') as $callable)
				{
				  call_user_func($callable, $this, $con);
				}

				$this->setDeleted(true);
				$con->commit();
			} else {
				$con->commit();
			}
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(CalidadcantidadaguaPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		$isInsert = $this->isNew();
		try {
			$ret = $this->preSave($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseCalidadcantidadagua:save:pre') as $callable)
			{
			  if (is_integer($affectedRows = call_user_func($callable, $this, $con)))
			  {
			    $con->commit();
			
			    return $affectedRows;
			  }
			}

			if ($isInsert) {
				$ret = $ret && $this->preInsert($con);
			} else {
				$ret = $ret && $this->preUpdate($con);
			}
			if ($ret) {
				$affectedRows = $this->doSave($con);
				if ($isInsert) {
					$this->postInsert($con);
				} else {
					$this->postUpdate($con);
				}
				$this->postSave($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseCalidadcantidadagua:save:post') as $callable)
				{
				  call_user_func($callable, $this, $con, $affectedRows);
				}

				CalidadcantidadaguaPeer::addInstanceToPool($this);
			} else {
				$affectedRows = 0;
			}
			$con->commit();
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			// We call the save method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aMicrocuencas !== null) {
				if ($this->aMicrocuencas->isModified() || $this->aMicrocuencas->isNew()) {
					$affectedRows += $this->aMicrocuencas->save($con);
				}
				$this->setMicrocuencas($this->aMicrocuencas);
			}

			if ($this->isNew() ) {
				$this->modifiedColumns[] = CalidadcantidadaguaPeer::CCA_ID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = CalidadcantidadaguaPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setCcaId($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += CalidadcantidadaguaPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			// We call the validate method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aMicrocuencas !== null) {
				if (!$this->aMicrocuencas->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aMicrocuencas->getValidationFailures());
				}
			}


			if (($retval = CalidadcantidadaguaPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = CalidadcantidadaguaPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getCcaId();
				break;
			case 1:
				return $this->getCcaMicId();
				break;
			case 2:
				return $this->getCcaActividadesAgricolaCultivosPermanentes();
				break;
			case 3:
				return $this->getCcaActividadesAgricolaCultivosSemipermanentes();
				break;
			case 4:
				return $this->getCcaActividadesAgricolaTemporales();
				break;
			case 5:
				return $this->getCcaActividadPecuariaGanaderiaBobina();
				break;
			case 6:
				return $this->getCcaActividadPecuariaGanaderiaEquina();
				break;
			case 7:
				return $this->getCcaActividadPecuariaPorcicultura();
				break;
			case 8:
				return $this->getCcaActividadPecuariaCapriculturaOvinos();
				break;
			case 9:
				return $this->getCcaActividadPecuariaAvicultura();
				break;
			case 10:
				return $this->getCcaActividadPecuariaPiscicultura();
				break;
			case 11:
				return $this->getCcaActividadPecuariaOtrosCual();
				break;
			case 12:
				return $this->getCcaControlPlagasEnfermedadesQuimico();
				break;
			case 13:
				return $this->getCcaControlPlagasEnfermedadesOrganico();
				break;
			case 14:
				return $this->getCcaControlPlagasEnfermedadesBiologico();
				break;
			case 15:
				return $this->getCcaControlPlagasEnfermedadesNinguno();
				break;
			case 16:
				return $this->getCcaFertilizacionCultivosQuimico();
				break;
			case 17:
				return $this->getCcaFertilizacionCultivosOrganico();
				break;
			case 18:
				return $this->getCcaFertilizacionCultivosNinguno();
				break;
			case 19:
				return $this->getCcaCapacitacionDadaPrestador();
				break;
			case 20:
				return $this->getCcaControlMalezasQuimico();
				break;
			case 21:
				return $this->getCcaControlMalezasMecaManu();
				break;
			case 22:
				return $this->getCcaControlMalezasOrganico();
				break;
			case 23:
				return $this->getCcaControlMalezasNinguno();
				break;
			case 24:
				return $this->getCcaMineria();
				break;
			case 25:
				return $this->getCcaErosion();
				break;
			case 26:
				return $this->getCcaModificacionesPaisajeConstrucionVias();
				break;
			case 27:
				return $this->getCcaModificacionesPaisajeConstrucionVivienda();
				break;
			case 28:
				return $this->getCcaModificacionesPaisajeConstrucionOtro();
				break;
			case 29:
				return $this->getCcaDescargasViviendaLiquido();
				break;
			case 30:
				return $this->getCcaDescargasViviendaSolido();
				break;
			case 31:
				return $this->getCcaDescargaActividadProductivaAgricola();
				break;
			case 32:
				return $this->getCcaDescargaActividadProductivaPecuaria();
				break;
			case 33:
				return $this->getCcaDescargaActividadProductivaMinera();
				break;
			case 34:
				return $this->getCcaDescargaActividadProductivaIndustrial();
				break;
			case 35:
				return $this->getCcaDescargaActividadProductivaOtra();
				break;
			case 36:
				return $this->getCcaActividadesAgricolaMayorArea();
				break;
			case 37:
				return $this->getCcaActividadesAgricolaCultivosPermanentesTendencia();
				break;
			case 38:
				return $this->getCcaActividadesAgricolaCultivosSemipermanentesTendencia();
				break;
			case 39:
				return $this->getCcaActividadesAgricolaTemporalesTendencia();
				break;
			case 40:
				return $this->getCcaActividadPecuariaMayorArea();
				break;
			case 41:
				return $this->getCcaActividadPecuariaGanaderiaBobinaTendencia();
				break;
			case 42:
				return $this->getCcaActividadPecuariaGanaderiaEquinaTendencia();
				break;
			case 43:
				return $this->getCcaActividadPecuariaPorciculturaTendencia();
				break;
			case 44:
				return $this->getCcaActividadPecuariaCapriculturaOvinosTendencia();
				break;
			case 45:
				return $this->getCcaActividadPecuariaAviculturaTendencia();
				break;
			case 46:
				return $this->getCcaActividadPecuariaPisciculturaTendencia();
				break;
			case 47:
				return $this->getCcaActividadPecuariaOtrosCualTendencia();
				break;
			case 48:
				return $this->getCcaControlPlagasEnfermedadesMasUsado();
				break;
			case 49:
				return $this->getCcaControlPlagasEnfermedadesQuimicoTendencia();
				break;
			case 50:
				return $this->getCcaControlPlagasEnfermedadesOrganicoTendencia();
				break;
			case 51:
				return $this->getCcaControlPlagasEnfermedadesBiologicoTendencia();
				break;
			case 52:
				return $this->getCcaControlPlagasEnfermedadesNingunoTendencia();
				break;
			case 53:
				return $this->getCcaFertilizacionCultivosMasUsado();
				break;
			case 54:
				return $this->getCcaFertilizacionCultivosQuimicoTendencia();
				break;
			case 55:
				return $this->getCcaFertilizacionCultivosOrganicoTendencia();
				break;
			case 56:
				return $this->getCcaFertilizacionCultivosNingunoTendencia();
				break;
			case 57:
				return $this->getCcaControlMalezasMasUsado();
				break;
			case 58:
				return $this->getCcaControlMalezasQuimicoTendencia();
				break;
			case 59:
				return $this->getCcaControlMalezasMecaManuTendencia();
				break;
			case 60:
				return $this->getCcaControlMalezasOrganicoTendencia();
				break;
			case 61:
				return $this->getCcaControlMalezasNingunoTendencia();
				break;
			case 62:
				return $this->getCcaMineriaTendencia();
				break;
			case 63:
				return $this->getCcaErosionTendencia();
				break;
			case 64:
				return $this->getCcaModificacionesPaisajeConstrucionViasTendencia();
				break;
			case 65:
				return $this->getCcaModificacionesPaisajeConstrucionViviendaTendencia();
				break;
			case 66:
				return $this->getCcaModificacionesPaisajeConstrucionOtroTendencia();
				break;
			case 67:
				return $this->getCcaDescargaActividadProductivaAgricolaTendencia();
				break;
			case 68:
				return $this->getCcaDescargaActividadProductivaPecuariaTendencia();
				break;
			case 69:
				return $this->getCcaDescargaActividadProductivaMineraTendencia();
				break;
			case 70:
				return $this->getCcaDescargaActividadProductivaIndustrialTendencia();
				break;
			case 71:
				return $this->getCcaDescargaActividadProductivaOtraTendencia();
				break;
			case 72:
				return $this->getCcaDescargaActividadProductivaAgricolaEspe();
				break;
			case 73:
				return $this->getCcaDescargaActividadProductivaPecuariaEspe();
				break;
			case 74:
				return $this->getCcaDescargaActividadProductivaMineraEspe();
				break;
			case 75:
				return $this->getCcaDescargaActividadProductivaIndustrialEspe();
				break;
			case 76:
				return $this->getCcaDescargaActividadProductivaOtraEspe();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = CalidadcantidadaguaPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getCcaId(),
			$keys[1] => $this->getCcaMicId(),
			$keys[2] => $this->getCcaActividadesAgricolaCultivosPermanentes(),
			$keys[3] => $this->getCcaActividadesAgricolaCultivosSemipermanentes(),
			$keys[4] => $this->getCcaActividadesAgricolaTemporales(),
			$keys[5] => $this->getCcaActividadPecuariaGanaderiaBobina(),
			$keys[6] => $this->getCcaActividadPecuariaGanaderiaEquina(),
			$keys[7] => $this->getCcaActividadPecuariaPorcicultura(),
			$keys[8] => $this->getCcaActividadPecuariaCapriculturaOvinos(),
			$keys[9] => $this->getCcaActividadPecuariaAvicultura(),
			$keys[10] => $this->getCcaActividadPecuariaPiscicultura(),
			$keys[11] => $this->getCcaActividadPecuariaOtrosCual(),
			$keys[12] => $this->getCcaControlPlagasEnfermedadesQuimico(),
			$keys[13] => $this->getCcaControlPlagasEnfermedadesOrganico(),
			$keys[14] => $this->getCcaControlPlagasEnfermedadesBiologico(),
			$keys[15] => $this->getCcaControlPlagasEnfermedadesNinguno(),
			$keys[16] => $this->getCcaFertilizacionCultivosQuimico(),
			$keys[17] => $this->getCcaFertilizacionCultivosOrganico(),
			$keys[18] => $this->getCcaFertilizacionCultivosNinguno(),
			$keys[19] => $this->getCcaCapacitacionDadaPrestador(),
			$keys[20] => $this->getCcaControlMalezasQuimico(),
			$keys[21] => $this->getCcaControlMalezasMecaManu(),
			$keys[22] => $this->getCcaControlMalezasOrganico(),
			$keys[23] => $this->getCcaControlMalezasNinguno(),
			$keys[24] => $this->getCcaMineria(),
			$keys[25] => $this->getCcaErosion(),
			$keys[26] => $this->getCcaModificacionesPaisajeConstrucionVias(),
			$keys[27] => $this->getCcaModificacionesPaisajeConstrucionVivienda(),
			$keys[28] => $this->getCcaModificacionesPaisajeConstrucionOtro(),
			$keys[29] => $this->getCcaDescargasViviendaLiquido(),
			$keys[30] => $this->getCcaDescargasViviendaSolido(),
			$keys[31] => $this->getCcaDescargaActividadProductivaAgricola(),
			$keys[32] => $this->getCcaDescargaActividadProductivaPecuaria(),
			$keys[33] => $this->getCcaDescargaActividadProductivaMinera(),
			$keys[34] => $this->getCcaDescargaActividadProductivaIndustrial(),
			$keys[35] => $this->getCcaDescargaActividadProductivaOtra(),
			$keys[36] => $this->getCcaActividadesAgricolaMayorArea(),
			$keys[37] => $this->getCcaActividadesAgricolaCultivosPermanentesTendencia(),
			$keys[38] => $this->getCcaActividadesAgricolaCultivosSemipermanentesTendencia(),
			$keys[39] => $this->getCcaActividadesAgricolaTemporalesTendencia(),
			$keys[40] => $this->getCcaActividadPecuariaMayorArea(),
			$keys[41] => $this->getCcaActividadPecuariaGanaderiaBobinaTendencia(),
			$keys[42] => $this->getCcaActividadPecuariaGanaderiaEquinaTendencia(),
			$keys[43] => $this->getCcaActividadPecuariaPorciculturaTendencia(),
			$keys[44] => $this->getCcaActividadPecuariaCapriculturaOvinosTendencia(),
			$keys[45] => $this->getCcaActividadPecuariaAviculturaTendencia(),
			$keys[46] => $this->getCcaActividadPecuariaPisciculturaTendencia(),
			$keys[47] => $this->getCcaActividadPecuariaOtrosCualTendencia(),
			$keys[48] => $this->getCcaControlPlagasEnfermedadesMasUsado(),
			$keys[49] => $this->getCcaControlPlagasEnfermedadesQuimicoTendencia(),
			$keys[50] => $this->getCcaControlPlagasEnfermedadesOrganicoTendencia(),
			$keys[51] => $this->getCcaControlPlagasEnfermedadesBiologicoTendencia(),
			$keys[52] => $this->getCcaControlPlagasEnfermedadesNingunoTendencia(),
			$keys[53] => $this->getCcaFertilizacionCultivosMasUsado(),
			$keys[54] => $this->getCcaFertilizacionCultivosQuimicoTendencia(),
			$keys[55] => $this->getCcaFertilizacionCultivosOrganicoTendencia(),
			$keys[56] => $this->getCcaFertilizacionCultivosNingunoTendencia(),
			$keys[57] => $this->getCcaControlMalezasMasUsado(),
			$keys[58] => $this->getCcaControlMalezasQuimicoTendencia(),
			$keys[59] => $this->getCcaControlMalezasMecaManuTendencia(),
			$keys[60] => $this->getCcaControlMalezasOrganicoTendencia(),
			$keys[61] => $this->getCcaControlMalezasNingunoTendencia(),
			$keys[62] => $this->getCcaMineriaTendencia(),
			$keys[63] => $this->getCcaErosionTendencia(),
			$keys[64] => $this->getCcaModificacionesPaisajeConstrucionViasTendencia(),
			$keys[65] => $this->getCcaModificacionesPaisajeConstrucionViviendaTendencia(),
			$keys[66] => $this->getCcaModificacionesPaisajeConstrucionOtroTendencia(),
			$keys[67] => $this->getCcaDescargaActividadProductivaAgricolaTendencia(),
			$keys[68] => $this->getCcaDescargaActividadProductivaPecuariaTendencia(),
			$keys[69] => $this->getCcaDescargaActividadProductivaMineraTendencia(),
			$keys[70] => $this->getCcaDescargaActividadProductivaIndustrialTendencia(),
			$keys[71] => $this->getCcaDescargaActividadProductivaOtraTendencia(),
			$keys[72] => $this->getCcaDescargaActividadProductivaAgricolaEspe(),
			$keys[73] => $this->getCcaDescargaActividadProductivaPecuariaEspe(),
			$keys[74] => $this->getCcaDescargaActividadProductivaMineraEspe(),
			$keys[75] => $this->getCcaDescargaActividadProductivaIndustrialEspe(),
			$keys[76] => $this->getCcaDescargaActividadProductivaOtraEspe(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = CalidadcantidadaguaPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setCcaId($value);
				break;
			case 1:
				$this->setCcaMicId($value);
				break;
			case 2:
				$this->setCcaActividadesAgricolaCultivosPermanentes($value);
				break;
			case 3:
				$this->setCcaActividadesAgricolaCultivosSemipermanentes($value);
				break;
			case 4:
				$this->setCcaActividadesAgricolaTemporales($value);
				break;
			case 5:
				$this->setCcaActividadPecuariaGanaderiaBobina($value);
				break;
			case 6:
				$this->setCcaActividadPecuariaGanaderiaEquina($value);
				break;
			case 7:
				$this->setCcaActividadPecuariaPorcicultura($value);
				break;
			case 8:
				$this->setCcaActividadPecuariaCapriculturaOvinos($value);
				break;
			case 9:
				$this->setCcaActividadPecuariaAvicultura($value);
				break;
			case 10:
				$this->setCcaActividadPecuariaPiscicultura($value);
				break;
			case 11:
				$this->setCcaActividadPecuariaOtrosCual($value);
				break;
			case 12:
				$this->setCcaControlPlagasEnfermedadesQuimico($value);
				break;
			case 13:
				$this->setCcaControlPlagasEnfermedadesOrganico($value);
				break;
			case 14:
				$this->setCcaControlPlagasEnfermedadesBiologico($value);
				break;
			case 15:
				$this->setCcaControlPlagasEnfermedadesNinguno($value);
				break;
			case 16:
				$this->setCcaFertilizacionCultivosQuimico($value);
				break;
			case 17:
				$this->setCcaFertilizacionCultivosOrganico($value);
				break;
			case 18:
				$this->setCcaFertilizacionCultivosNinguno($value);
				break;
			case 19:
				$this->setCcaCapacitacionDadaPrestador($value);
				break;
			case 20:
				$this->setCcaControlMalezasQuimico($value);
				break;
			case 21:
				$this->setCcaControlMalezasMecaManu($value);
				break;
			case 22:
				$this->setCcaControlMalezasOrganico($value);
				break;
			case 23:
				$this->setCcaControlMalezasNinguno($value);
				break;
			case 24:
				$this->setCcaMineria($value);
				break;
			case 25:
				$this->setCcaErosion($value);
				break;
			case 26:
				$this->setCcaModificacionesPaisajeConstrucionVias($value);
				break;
			case 27:
				$this->setCcaModificacionesPaisajeConstrucionVivienda($value);
				break;
			case 28:
				$this->setCcaModificacionesPaisajeConstrucionOtro($value);
				break;
			case 29:
				$this->setCcaDescargasViviendaLiquido($value);
				break;
			case 30:
				$this->setCcaDescargasViviendaSolido($value);
				break;
			case 31:
				$this->setCcaDescargaActividadProductivaAgricola($value);
				break;
			case 32:
				$this->setCcaDescargaActividadProductivaPecuaria($value);
				break;
			case 33:
				$this->setCcaDescargaActividadProductivaMinera($value);
				break;
			case 34:
				$this->setCcaDescargaActividadProductivaIndustrial($value);
				break;
			case 35:
				$this->setCcaDescargaActividadProductivaOtra($value);
				break;
			case 36:
				$this->setCcaActividadesAgricolaMayorArea($value);
				break;
			case 37:
				$this->setCcaActividadesAgricolaCultivosPermanentesTendencia($value);
				break;
			case 38:
				$this->setCcaActividadesAgricolaCultivosSemipermanentesTendencia($value);
				break;
			case 39:
				$this->setCcaActividadesAgricolaTemporalesTendencia($value);
				break;
			case 40:
				$this->setCcaActividadPecuariaMayorArea($value);
				break;
			case 41:
				$this->setCcaActividadPecuariaGanaderiaBobinaTendencia($value);
				break;
			case 42:
				$this->setCcaActividadPecuariaGanaderiaEquinaTendencia($value);
				break;
			case 43:
				$this->setCcaActividadPecuariaPorciculturaTendencia($value);
				break;
			case 44:
				$this->setCcaActividadPecuariaCapriculturaOvinosTendencia($value);
				break;
			case 45:
				$this->setCcaActividadPecuariaAviculturaTendencia($value);
				break;
			case 46:
				$this->setCcaActividadPecuariaPisciculturaTendencia($value);
				break;
			case 47:
				$this->setCcaActividadPecuariaOtrosCualTendencia($value);
				break;
			case 48:
				$this->setCcaControlPlagasEnfermedadesMasUsado($value);
				break;
			case 49:
				$this->setCcaControlPlagasEnfermedadesQuimicoTendencia($value);
				break;
			case 50:
				$this->setCcaControlPlagasEnfermedadesOrganicoTendencia($value);
				break;
			case 51:
				$this->setCcaControlPlagasEnfermedadesBiologicoTendencia($value);
				break;
			case 52:
				$this->setCcaControlPlagasEnfermedadesNingunoTendencia($value);
				break;
			case 53:
				$this->setCcaFertilizacionCultivosMasUsado($value);
				break;
			case 54:
				$this->setCcaFertilizacionCultivosQuimicoTendencia($value);
				break;
			case 55:
				$this->setCcaFertilizacionCultivosOrganicoTendencia($value);
				break;
			case 56:
				$this->setCcaFertilizacionCultivosNingunoTendencia($value);
				break;
			case 57:
				$this->setCcaControlMalezasMasUsado($value);
				break;
			case 58:
				$this->setCcaControlMalezasQuimicoTendencia($value);
				break;
			case 59:
				$this->setCcaControlMalezasMecaManuTendencia($value);
				break;
			case 60:
				$this->setCcaControlMalezasOrganicoTendencia($value);
				break;
			case 61:
				$this->setCcaControlMalezasNingunoTendencia($value);
				break;
			case 62:
				$this->setCcaMineriaTendencia($value);
				break;
			case 63:
				$this->setCcaErosionTendencia($value);
				break;
			case 64:
				$this->setCcaModificacionesPaisajeConstrucionViasTendencia($value);
				break;
			case 65:
				$this->setCcaModificacionesPaisajeConstrucionViviendaTendencia($value);
				break;
			case 66:
				$this->setCcaModificacionesPaisajeConstrucionOtroTendencia($value);
				break;
			case 67:
				$this->setCcaDescargaActividadProductivaAgricolaTendencia($value);
				break;
			case 68:
				$this->setCcaDescargaActividadProductivaPecuariaTendencia($value);
				break;
			case 69:
				$this->setCcaDescargaActividadProductivaMineraTendencia($value);
				break;
			case 70:
				$this->setCcaDescargaActividadProductivaIndustrialTendencia($value);
				break;
			case 71:
				$this->setCcaDescargaActividadProductivaOtraTendencia($value);
				break;
			case 72:
				$this->setCcaDescargaActividadProductivaAgricolaEspe($value);
				break;
			case 73:
				$this->setCcaDescargaActividadProductivaPecuariaEspe($value);
				break;
			case 74:
				$this->setCcaDescargaActividadProductivaMineraEspe($value);
				break;
			case 75:
				$this->setCcaDescargaActividadProductivaIndustrialEspe($value);
				break;
			case 76:
				$this->setCcaDescargaActividadProductivaOtraEspe($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = CalidadcantidadaguaPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setCcaId($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setCcaMicId($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setCcaActividadesAgricolaCultivosPermanentes($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setCcaActividadesAgricolaCultivosSemipermanentes($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setCcaActividadesAgricolaTemporales($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setCcaActividadPecuariaGanaderiaBobina($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setCcaActividadPecuariaGanaderiaEquina($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setCcaActividadPecuariaPorcicultura($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setCcaActividadPecuariaCapriculturaOvinos($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setCcaActividadPecuariaAvicultura($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setCcaActividadPecuariaPiscicultura($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setCcaActividadPecuariaOtrosCual($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setCcaControlPlagasEnfermedadesQuimico($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setCcaControlPlagasEnfermedadesOrganico($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setCcaControlPlagasEnfermedadesBiologico($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setCcaControlPlagasEnfermedadesNinguno($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setCcaFertilizacionCultivosQuimico($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setCcaFertilizacionCultivosOrganico($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setCcaFertilizacionCultivosNinguno($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setCcaCapacitacionDadaPrestador($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setCcaControlMalezasQuimico($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setCcaControlMalezasMecaManu($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setCcaControlMalezasOrganico($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setCcaControlMalezasNinguno($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setCcaMineria($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setCcaErosion($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setCcaModificacionesPaisajeConstrucionVias($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setCcaModificacionesPaisajeConstrucionVivienda($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setCcaModificacionesPaisajeConstrucionOtro($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setCcaDescargasViviendaLiquido($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setCcaDescargasViviendaSolido($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setCcaDescargaActividadProductivaAgricola($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setCcaDescargaActividadProductivaPecuaria($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setCcaDescargaActividadProductivaMinera($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setCcaDescargaActividadProductivaIndustrial($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setCcaDescargaActividadProductivaOtra($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setCcaActividadesAgricolaMayorArea($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setCcaActividadesAgricolaCultivosPermanentesTendencia($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setCcaActividadesAgricolaCultivosSemipermanentesTendencia($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setCcaActividadesAgricolaTemporalesTendencia($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setCcaActividadPecuariaMayorArea($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setCcaActividadPecuariaGanaderiaBobinaTendencia($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setCcaActividadPecuariaGanaderiaEquinaTendencia($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setCcaActividadPecuariaPorciculturaTendencia($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setCcaActividadPecuariaCapriculturaOvinosTendencia($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setCcaActividadPecuariaAviculturaTendencia($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setCcaActividadPecuariaPisciculturaTendencia($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setCcaActividadPecuariaOtrosCualTendencia($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setCcaControlPlagasEnfermedadesMasUsado($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setCcaControlPlagasEnfermedadesQuimicoTendencia($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setCcaControlPlagasEnfermedadesOrganicoTendencia($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setCcaControlPlagasEnfermedadesBiologicoTendencia($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setCcaControlPlagasEnfermedadesNingunoTendencia($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setCcaFertilizacionCultivosMasUsado($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setCcaFertilizacionCultivosQuimicoTendencia($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setCcaFertilizacionCultivosOrganicoTendencia($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setCcaFertilizacionCultivosNingunoTendencia($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setCcaControlMalezasMasUsado($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setCcaControlMalezasQuimicoTendencia($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setCcaControlMalezasMecaManuTendencia($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setCcaControlMalezasOrganicoTendencia($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setCcaControlMalezasNingunoTendencia($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setCcaMineriaTendencia($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setCcaErosionTendencia($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setCcaModificacionesPaisajeConstrucionViasTendencia($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setCcaModificacionesPaisajeConstrucionViviendaTendencia($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setCcaModificacionesPaisajeConstrucionOtroTendencia($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setCcaDescargaActividadProductivaAgricolaTendencia($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setCcaDescargaActividadProductivaPecuariaTendencia($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setCcaDescargaActividadProductivaMineraTendencia($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setCcaDescargaActividadProductivaIndustrialTendencia($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setCcaDescargaActividadProductivaOtraTendencia($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setCcaDescargaActividadProductivaAgricolaEspe($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setCcaDescargaActividadProductivaPecuariaEspe($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setCcaDescargaActividadProductivaMineraEspe($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setCcaDescargaActividadProductivaIndustrialEspe($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setCcaDescargaActividadProductivaOtraEspe($arr[$keys[76]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(CalidadcantidadaguaPeer::DATABASE_NAME);

		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ID)) $criteria->add(CalidadcantidadaguaPeer::CCA_ID, $this->cca_id);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MIC_ID)) $criteria->add(CalidadcantidadaguaPeer::CCA_MIC_ID, $this->cca_mic_id);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_PERMANENTES)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_PERMANENTES, $this->cca_actividades_agricola_cultivos_permanentes);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_SEMIPERMANENTES)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_SEMIPERMANENTES, $this->cca_actividades_agricola_cultivos_semipermanentes);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_TEMPORALES)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_TEMPORALES, $this->cca_actividades_agricola_temporales);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_BOBINA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_BOBINA, $this->cca_actividad_pecuaria_ganaderia_bobina);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_EQUINA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_EQUINA, $this->cca_actividad_pecuaria_ganaderia_equina);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PORCICULTURA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PORCICULTURA, $this->cca_actividad_pecuaria_porcicultura);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_CAPRICULTURA_OVINOS)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_CAPRICULTURA_OVINOS, $this->cca_actividad_pecuaria_capricultura_ovinos);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_AVICULTURA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_AVICULTURA, $this->cca_actividad_pecuaria_avicultura);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PISCICULTURA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PISCICULTURA, $this->cca_actividad_pecuaria_piscicultura);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_OTROS_CUAL)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_OTROS_CUAL, $this->cca_actividad_pecuaria_otros_cual);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_QUIMICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_QUIMICO, $this->cca_control_plagas_enfermedades_quimico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_ORGANICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_ORGANICO, $this->cca_control_plagas_enfermedades_organico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_BIOLOGICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_BIOLOGICO, $this->cca_control_plagas_enfermedades_biologico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_NINGUNO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_NINGUNO, $this->cca_control_plagas_enfermedades_ninguno);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_QUIMICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_QUIMICO, $this->cca_fertilizacion_cultivos_quimico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_ORGANICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_ORGANICO, $this->cca_fertilizacion_cultivos_organico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_NINGUNO)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_NINGUNO, $this->cca_fertilizacion_cultivos_ninguno);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CAPACITACION_DADA_PRESTADOR)) $criteria->add(CalidadcantidadaguaPeer::CCA_CAPACITACION_DADA_PRESTADOR, $this->cca_capacitacion_dada_prestador);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_QUIMICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_QUIMICO, $this->cca_control_malezas_quimico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MECA_MANU)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MECA_MANU, $this->cca_control_malezas_meca_manu);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_ORGANICO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_ORGANICO, $this->cca_control_malezas_organico);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_NINGUNO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_NINGUNO, $this->cca_control_malezas_ninguno);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MINERIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_MINERIA, $this->cca_mineria);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_EROSION)) $criteria->add(CalidadcantidadaguaPeer::CCA_EROSION, $this->cca_erosion);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIAS)) $criteria->add(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIAS, $this->cca_modificaciones_paisaje_construcion_vias);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIVIENDA)) $criteria->add(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIVIENDA, $this->cca_modificaciones_paisaje_construcion_vivienda);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_OTRO)) $criteria->add(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_OTRO, $this->cca_modificaciones_paisaje_construcion_otro);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGAS_VIVIENDA_LIQUIDO)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGAS_VIVIENDA_LIQUIDO, $this->cca_descargas_vivienda_liquido);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGAS_VIVIENDA_SOLIDO)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGAS_VIVIENDA_SOLIDO, $this->cca_descargas_vivienda_solido);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA, $this->cca_descarga_actividad_productiva_agricola);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA, $this->cca_descarga_actividad_productiva_pecuaria);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA, $this->cca_descarga_actividad_productiva_minera);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL, $this->cca_descarga_actividad_productiva_industrial);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA, $this->cca_descarga_actividad_productiva_otra);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_MAYOR_AREA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_MAYOR_AREA, $this->cca_actividades_agricola_mayor_area);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_PERMANENTES_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_PERMANENTES_TENDENCIA, $this->cca_actividades_agricola_cultivos_permanentes_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_SEMIPERMANENTES_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_CULTIVOS_SEMIPERMANENTES_TENDENCIA, $this->cca_actividades_agricola_cultivos_semipermanentes_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_TEMPORALES_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDADES_AGRICOLA_TEMPORALES_TENDENCIA, $this->cca_actividades_agricola_temporales_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_MAYOR_AREA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_MAYOR_AREA, $this->cca_actividad_pecuaria_mayor_area);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_BOBINA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_BOBINA_TENDENCIA, $this->cca_actividad_pecuaria_ganaderia_bobina_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_EQUINA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_GANADERIA_EQUINA_TENDENCIA, $this->cca_actividad_pecuaria_ganaderia_equina_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PORCICULTURA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PORCICULTURA_TENDENCIA, $this->cca_actividad_pecuaria_porcicultura_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_CAPRICULTURA_OVINOS_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_CAPRICULTURA_OVINOS_TENDENCIA, $this->cca_actividad_pecuaria_capricultura_ovinos_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_AVICULTURA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_AVICULTURA_TENDENCIA, $this->cca_actividad_pecuaria_avicultura_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PISCICULTURA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_PISCICULTURA_TENDENCIA, $this->cca_actividad_pecuaria_piscicultura_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_OTROS_CUAL_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_ACTIVIDAD_PECUARIA_OTROS_CUAL_TENDENCIA, $this->cca_actividad_pecuaria_otros_cual_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_MAS_USADO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_MAS_USADO, $this->cca_control_plagas_enfermedades_mas_usado);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_QUIMICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_QUIMICO_TENDENCIA, $this->cca_control_plagas_enfermedades_quimico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_ORGANICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_ORGANICO_TENDENCIA, $this->cca_control_plagas_enfermedades_organico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_BIOLOGICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_BIOLOGICO_TENDENCIA, $this->cca_control_plagas_enfermedades_biologico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_NINGUNO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_PLAGAS_ENFERMEDADES_NINGUNO_TENDENCIA, $this->cca_control_plagas_enfermedades_ninguno_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_MAS_USADO)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_MAS_USADO, $this->cca_fertilizacion_cultivos_mas_usado);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_QUIMICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_QUIMICO_TENDENCIA, $this->cca_fertilizacion_cultivos_quimico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_ORGANICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_ORGANICO_TENDENCIA, $this->cca_fertilizacion_cultivos_organico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_NINGUNO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_FERTILIZACION_CULTIVOS_NINGUNO_TENDENCIA, $this->cca_fertilizacion_cultivos_ninguno_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MAS_USADO)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MAS_USADO, $this->cca_control_malezas_mas_usado);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_QUIMICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_QUIMICO_TENDENCIA, $this->cca_control_malezas_quimico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MECA_MANU_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_MECA_MANU_TENDENCIA, $this->cca_control_malezas_meca_manu_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_ORGANICO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_ORGANICO_TENDENCIA, $this->cca_control_malezas_organico_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_NINGUNO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_CONTROL_MALEZAS_NINGUNO_TENDENCIA, $this->cca_control_malezas_ninguno_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MINERIA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_MINERIA_TENDENCIA, $this->cca_mineria_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_EROSION_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_EROSION_TENDENCIA, $this->cca_erosion_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIAS_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIAS_TENDENCIA, $this->cca_modificaciones_paisaje_construcion_vias_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIVIENDA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_VIVIENDA_TENDENCIA, $this->cca_modificaciones_paisaje_construcion_vivienda_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_OTRO_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_MODIFICACIONES_PAISAJE_CONSTRUCION_OTRO_TENDENCIA, $this->cca_modificaciones_paisaje_construcion_otro_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA_TENDENCIA, $this->cca_descarga_actividad_productiva_agricola_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA_TENDENCIA, $this->cca_descarga_actividad_productiva_pecuaria_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA_TENDENCIA, $this->cca_descarga_actividad_productiva_minera_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL_TENDENCIA, $this->cca_descarga_actividad_productiva_industrial_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA_TENDENCIA)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA_TENDENCIA, $this->cca_descarga_actividad_productiva_otra_tendencia);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA_ESPE)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_AGRICOLA_ESPE, $this->cca_descarga_actividad_productiva_agricola_espe);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA_ESPE)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_PECUARIA_ESPE, $this->cca_descarga_actividad_productiva_pecuaria_espe);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA_ESPE)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_MINERA_ESPE, $this->cca_descarga_actividad_productiva_minera_espe);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL_ESPE)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_INDUSTRIAL_ESPE, $this->cca_descarga_actividad_productiva_industrial_espe);
		if ($this->isColumnModified(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA_ESPE)) $criteria->add(CalidadcantidadaguaPeer::CCA_DESCARGA_ACTIVIDAD_PRODUCTIVA_OTRA_ESPE, $this->cca_descarga_actividad_productiva_otra_espe);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(CalidadcantidadaguaPeer::DATABASE_NAME);

		$criteria->add(CalidadcantidadaguaPeer::CCA_ID, $this->cca_id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getCcaId();
	}

	/**
	 * Generic method to set the primary key (cca_id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setCcaId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of Calidadcantidadagua (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setCcaMicId($this->cca_mic_id);

		$copyObj->setCcaActividadesAgricolaCultivosPermanentes($this->cca_actividades_agricola_cultivos_permanentes);

		$copyObj->setCcaActividadesAgricolaCultivosSemipermanentes($this->cca_actividades_agricola_cultivos_semipermanentes);

		$copyObj->setCcaActividadesAgricolaTemporales($this->cca_actividades_agricola_temporales);

		$copyObj->setCcaActividadPecuariaGanaderiaBobina($this->cca_actividad_pecuaria_ganaderia_bobina);

		$copyObj->setCcaActividadPecuariaGanaderiaEquina($this->cca_actividad_pecuaria_ganaderia_equina);

		$copyObj->setCcaActividadPecuariaPorcicultura($this->cca_actividad_pecuaria_porcicultura);

		$copyObj->setCcaActividadPecuariaCapriculturaOvinos($this->cca_actividad_pecuaria_capricultura_ovinos);

		$copyObj->setCcaActividadPecuariaAvicultura($this->cca_actividad_pecuaria_avicultura);

		$copyObj->setCcaActividadPecuariaPiscicultura($this->cca_actividad_pecuaria_piscicultura);

		$copyObj->setCcaActividadPecuariaOtrosCual($this->cca_actividad_pecuaria_otros_cual);

		$copyObj->setCcaControlPlagasEnfermedadesQuimico($this->cca_control_plagas_enfermedades_quimico);

		$copyObj->setCcaControlPlagasEnfermedadesOrganico($this->cca_control_plagas_enfermedades_organico);

		$copyObj->setCcaControlPlagasEnfermedadesBiologico($this->cca_control_plagas_enfermedades_biologico);

		$copyObj->setCcaControlPlagasEnfermedadesNinguno($this->cca_control_plagas_enfermedades_ninguno);

		$copyObj->setCcaFertilizacionCultivosQuimico($this->cca_fertilizacion_cultivos_quimico);

		$copyObj->setCcaFertilizacionCultivosOrganico($this->cca_fertilizacion_cultivos_organico);

		$copyObj->setCcaFertilizacionCultivosNinguno($this->cca_fertilizacion_cultivos_ninguno);

		$copyObj->setCcaCapacitacionDadaPrestador($this->cca_capacitacion_dada_prestador);

		$copyObj->setCcaControlMalezasQuimico($this->cca_control_malezas_quimico);

		$copyObj->setCcaControlMalezasMecaManu($this->cca_control_malezas_meca_manu);

		$copyObj->setCcaControlMalezasOrganico($this->cca_control_malezas_organico);

		$copyObj->setCcaControlMalezasNinguno($this->cca_control_malezas_ninguno);

		$copyObj->setCcaMineria($this->cca_mineria);

		$copyObj->setCcaErosion($this->cca_erosion);

		$copyObj->setCcaModificacionesPaisajeConstrucionVias($this->cca_modificaciones_paisaje_construcion_vias);

		$copyObj->setCcaModificacionesPaisajeConstrucionVivienda($this->cca_modificaciones_paisaje_construcion_vivienda);

		$copyObj->setCcaModificacionesPaisajeConstrucionOtro($this->cca_modificaciones_paisaje_construcion_otro);

		$copyObj->setCcaDescargasViviendaLiquido($this->cca_descargas_vivienda_liquido);

		$copyObj->setCcaDescargasViviendaSolido($this->cca_descargas_vivienda_solido);

		$copyObj->setCcaDescargaActividadProductivaAgricola($this->cca_descarga_actividad_productiva_agricola);

		$copyObj->setCcaDescargaActividadProductivaPecuaria($this->cca_descarga_actividad_productiva_pecuaria);

		$copyObj->setCcaDescargaActividadProductivaMinera($this->cca_descarga_actividad_productiva_minera);

		$copyObj->setCcaDescargaActividadProductivaIndustrial($this->cca_descarga_actividad_productiva_industrial);

		$copyObj->setCcaDescargaActividadProductivaOtra($this->cca_descarga_actividad_productiva_otra);

		$copyObj->setCcaActividadesAgricolaMayorArea($this->cca_actividades_agricola_mayor_area);

		$copyObj->setCcaActividadesAgricolaCultivosPermanentesTendencia($this->cca_actividades_agricola_cultivos_permanentes_tendencia);

		$copyObj->setCcaActividadesAgricolaCultivosSemipermanentesTendencia($this->cca_actividades_agricola_cultivos_semipermanentes_tendencia);

		$copyObj->setCcaActividadesAgricolaTemporalesTendencia($this->cca_actividades_agricola_temporales_tendencia);

		$copyObj->setCcaActividadPecuariaMayorArea($this->cca_actividad_pecuaria_mayor_area);

		$copyObj->setCcaActividadPecuariaGanaderiaBobinaTendencia($this->cca_actividad_pecuaria_ganaderia_bobina_tendencia);

		$copyObj->setCcaActividadPecuariaGanaderiaEquinaTendencia($this->cca_actividad_pecuaria_ganaderia_equina_tendencia);

		$copyObj->setCcaActividadPecuariaPorciculturaTendencia($this->cca_actividad_pecuaria_porcicultura_tendencia);

		$copyObj->setCcaActividadPecuariaCapriculturaOvinosTendencia($this->cca_actividad_pecuaria_capricultura_ovinos_tendencia);

		$copyObj->setCcaActividadPecuariaAviculturaTendencia($this->cca_actividad_pecuaria_avicultura_tendencia);

		$copyObj->setCcaActividadPecuariaPisciculturaTendencia($this->cca_actividad_pecuaria_piscicultura_tendencia);

		$copyObj->setCcaActividadPecuariaOtrosCualTendencia($this->cca_actividad_pecuaria_otros_cual_tendencia);

		$copyObj->setCcaControlPlagasEnfermedadesMasUsado($this->cca_control_plagas_enfermedades_mas_usado);

		$copyObj->setCcaControlPlagasEnfermedadesQuimicoTendencia($this->cca_control_plagas_enfermedades_quimico_tendencia);

		$copyObj->setCcaControlPlagasEnfermedadesOrganicoTendencia($this->cca_control_plagas_enfermedades_organico_tendencia);

		$copyObj->setCcaControlPlagasEnfermedadesBiologicoTendencia($this->cca_control_plagas_enfermedades_biologico_tendencia);

		$copyObj->setCcaControlPlagasEnfermedadesNingunoTendencia($this->cca_control_plagas_enfermedades_ninguno_tendencia);

		$copyObj->setCcaFertilizacionCultivosMasUsado($this->cca_fertilizacion_cultivos_mas_usado);

		$copyObj->setCcaFertilizacionCultivosQuimicoTendencia($this->cca_fertilizacion_cultivos_quimico_tendencia);

		$copyObj->setCcaFertilizacionCultivosOrganicoTendencia($this->cca_fertilizacion_cultivos_organico_tendencia);

		$copyObj->setCcaFertilizacionCultivosNingunoTendencia($this->cca_fertilizacion_cultivos_ninguno_tendencia);

		$copyObj->setCcaControlMalezasMasUsado($this->cca_control_malezas_mas_usado);

		$copyObj->setCcaControlMalezasQuimicoTendencia($this->cca_control_malezas_quimico_tendencia);

		$copyObj->setCcaControlMalezasMecaManuTendencia($this->cca_control_malezas_meca_manu_tendencia);

		$copyObj->setCcaControlMalezasOrganicoTendencia($this->cca_control_malezas_organico_tendencia);

		$copyObj->setCcaControlMalezasNingunoTendencia($this->cca_control_malezas_ninguno_tendencia);

		$copyObj->setCcaMineriaTendencia($this->cca_mineria_tendencia);

		$copyObj->setCcaErosionTendencia($this->cca_erosion_tendencia);

		$copyObj->setCcaModificacionesPaisajeConstrucionViasTendencia($this->cca_modificaciones_paisaje_construcion_vias_tendencia);

		$copyObj->setCcaModificacionesPaisajeConstrucionViviendaTendencia($this->cca_modificaciones_paisaje_construcion_vivienda_tendencia);

		$copyObj->setCcaModificacionesPaisajeConstrucionOtroTendencia($this->cca_modificaciones_paisaje_construcion_otro_tendencia);

		$copyObj->setCcaDescargaActividadProductivaAgricolaTendencia($this->cca_descarga_actividad_productiva_agricola_tendencia);

		$copyObj->setCcaDescargaActividadProductivaPecuariaTendencia($this->cca_descarga_actividad_productiva_pecuaria_tendencia);

		$copyObj->setCcaDescargaActividadProductivaMineraTendencia($this->cca_descarga_actividad_productiva_minera_tendencia);

		$copyObj->setCcaDescargaActividadProductivaIndustrialTendencia($this->cca_descarga_actividad_productiva_industrial_tendencia);

		$copyObj->setCcaDescargaActividadProductivaOtraTendencia($this->cca_descarga_actividad_productiva_otra_tendencia);

		$copyObj->setCcaDescargaActividadProductivaAgricolaEspe($this->cca_descarga_actividad_productiva_agricola_espe);

		$copyObj->setCcaDescargaActividadProductivaPecuariaEspe($this->cca_descarga_actividad_productiva_pecuaria_espe);

		$copyObj->setCcaDescargaActividadProductivaMineraEspe($this->cca_descarga_actividad_productiva_minera_espe);

		$copyObj->setCcaDescargaActividadProductivaIndustrialEspe($this->cca_descarga_actividad_productiva_industrial_espe);

		$copyObj->setCcaDescargaActividadProductivaOtraEspe($this->cca_descarga_actividad_productiva_otra_espe);


		$copyObj->setNew(true);

		$copyObj->setCcaId(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     Calidadcantidadagua Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     CalidadcantidadaguaPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new CalidadcantidadaguaPeer();
		}
		return self::$peer;
	}

	/**
	 * Declares an association between this object and a Microcuencas object.
	 *
	 * @param      Microcuencas $v
	 * @return     Calidadcantidadagua The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setMicrocuencas(Microcuencas $v = null)
	{
		if ($v === null) {
			$this->setCcaMicId(NULL);
		} else {
			$this->setCcaMicId($v->getMicId());
		}

		$this->aMicrocuencas = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Microcuencas object, it will not be re-added.
		if ($v !== null) {
			$v->addCalidadcantidadagua($this);
		}

		return $this;
	}


	/**
	 * Get the associated Microcuencas object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Microcuencas The associated Microcuencas object.
	 * @throws     PropelException
	 */
	public function getMicrocuencas(PropelPDO $con = null)
	{
		if ($this->aMicrocuencas === null && ($this->cca_mic_id !== null)) {
			$this->aMicrocuencas = MicrocuencasPeer::retrieveByPk($this->cca_mic_id);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aMicrocuencas->addCalidadcantidadaguas($this);
			 */
		}
		return $this->aMicrocuencas;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

			$this->aMicrocuencas = null;
	}

	// symfony_behaviors behavior
	
	/**
	 * Calls methods defined via {@link sfMixer}.
	 */
	public function __call($method, $arguments)
	{
	  if (!$callable = sfMixer::getCallable('BaseCalidadcantidadagua:'.$method))
	  {
	    throw new sfException(sprintf('Call to undefined method BaseCalidadcantidadagua::%s', $method));
	  }
	
	  array_unshift($arguments, $this);
	
	  return call_user_func_array($callable, $arguments);
	}

} // BaseCalidadcantidadagua
