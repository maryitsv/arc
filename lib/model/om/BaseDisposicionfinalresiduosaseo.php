<?php

/**
 * Base class that represents a row from the 'disposicionfinalresiduosaseo' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 07/17/10 19:39:12
 *
 * @package    lib.model.om
 */
abstract class BaseDisposicionfinalresiduosaseo extends BaseObject  implements Persistent {


	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        DisposicionfinalresiduosaseoPeer
	 */
	protected static $peer;

	/**
	 * The value for the dfr_id field.
	 * @var        int
	 */
	protected $dfr_id;

	/**
	 * The value for the dfr_autoridad_autonoma_id field.
	 * @var        int
	 */
	protected $dfr_autoridad_autonoma_id;

	/**
	 * The value for the dfr_estado_via_acceso_sitio_id field.
	 * @var        int
	 */
	protected $dfr_estado_via_acceso_sitio_id;

	/**
	 * The value for the dfr_departamento_dispocision_id field.
	 * @var        int
	 */
	protected $dfr_departamento_dispocision_id;

	/**
	 * The value for the dfr_municipio_disposicion_id field.
	 * @var        int
	 */
	protected $dfr_municipio_disposicion_id;

	/**
	 * The value for the dfr_top_id field.
	 * @var        int
	 */
	protected $dfr_top_id;

	/**
	 * The value for the dfr_contrata_disposicion_final field.
	 * @var        boolean
	 */
	protected $dfr_contrata_disposicion_final;

	/**
	 * The value for the dfr_nombre_entidad_prestadora_servicio_disposicion field.
	 * @var        string
	 */
	protected $dfr_nombre_entidad_prestadora_servicio_disposicion;

	/**
	 * The value for the dfr_corregimiento_disposicion field.
	 * @var        string
	 */
	protected $dfr_corregimiento_disposicion;

	/**
	 * The value for the dfr_vereda_disposicion field.
	 * @var        string
	 */
	protected $dfr_vereda_disposicion;

	/**
	 * The value for the dfr_cuenta_autorizacion_ambiental_disposicion field.
	 * @var        boolean
	 */
	protected $dfr_cuenta_autorizacion_ambiental_disposicion;

	/**
	 * The value for the dfr_tipo_autorizacion_ambiental field.
	 * @var        string
	 */
	protected $dfr_tipo_autorizacion_ambiental;

	/**
	 * The value for the dfr_resolucion_autoriza_disposicion field.
	 * @var        string
	 */
	protected $dfr_resolucion_autoriza_disposicion;

	/**
	 * The value for the dfr_fecha_resolucion field.
	 * @var        string
	 */
	protected $dfr_fecha_resolucion;

	/**
	 * The value for the dfr_fecha_terminacion_resolucion field.
	 * @var        string
	 */
	protected $dfr_fecha_terminacion_resolucion;

	/**
	 * The value for the dfr_fecha_terminacion_vida_util_sitio_disposicion field.
	 * @var        string
	 */
	protected $dfr_fecha_terminacion_vida_util_sitio_disposicion;

	/**
	 * The value for the dfr_cantidad_anual_residuos_botadero_cielo_abierto field.
	 * @var        string
	 */
	protected $dfr_cantidad_anual_residuos_botadero_cielo_abierto;

	/**
	 * The value for the dfr_cantidad_anual_residuos_relleno_sanitario field.
	 * @var        string
	 */
	protected $dfr_cantidad_anual_residuos_relleno_sanitario;

	/**
	 * The value for the dfr_dist_centro_poblado_mas_cercano_sitio field.
	 * @var        string
	 */
	protected $dfr_dist_centro_poblado_mas_cercano_sitio;

	/**
	 * The value for the dfr_dist_cuerpo_agua_mas_cercano_sitio field.
	 * @var        string
	 */
	protected $dfr_dist_cuerpo_agua_mas_cercano_sitio;

	/**
	 * The value for the drf_anios_utilizacion_sitio field.
	 * @var        int
	 */
	protected $drf_anios_utilizacion_sitio;

	/**
	 * The value for the dfr_area_destinada_para_disposicion_sitio field.
	 * @var        string
	 */
	protected $dfr_area_destinada_para_disposicion_sitio;

	/**
	 * The value for the dfr_si_relleno_tipo_relleno field.
	 * @var        boolean
	 */
	protected $dfr_si_relleno_tipo_relleno;

	/**
	 * The value for the dfr_presencia_recicladores_sitio field.
	 * @var        boolean
	 */
	protected $dfr_presencia_recicladores_sitio;

	/**
	 * The value for the dfr_cantidad_personas_sitio field.
	 * @var        int
	 */
	protected $dfr_cantidad_personas_sitio;

	/**
	 * The value for the dfr_tratamiento_lixiviados_sitio field.
	 * @var        boolean
	 */
	protected $dfr_tratamiento_lixiviados_sitio;

	/**
	 * The value for the dfr_tipo_tratamiento_lixiviados_sitio field.
	 * @var        string
	 */
	protected $dfr_tipo_tratamiento_lixiviados_sitio;

	/**
	 * The value for the dfr_lixi_entrada_fecha field.
	 * @var        string
	 */
	protected $dfr_lixi_entrada_fecha;

	/**
	 * The value for the dfr_lixi_entrada_caudal field.
	 * @var        string
	 */
	protected $dfr_lixi_entrada_caudal;

	/**
	 * The value for the dfr_lixi_entrada_dbo5 field.
	 * @var        string
	 */
	protected $dfr_lixi_entrada_dbo5;

	/**
	 * The value for the dfr_lixi_entrada_sst field.
	 * @var        string
	 */
	protected $dfr_lixi_entrada_sst;

	/**
	 * The value for the dfr_lixi_salida_fecha2 field.
	 * @var        string
	 */
	protected $dfr_lixi_salida_fecha2;

	/**
	 * The value for the dfr_lixi_salida_caudal2 field.
	 * @var        string
	 */
	protected $dfr_lixi_salida_caudal2;

	/**
	 * The value for the dfr_lixi_salida_dbo6 field.
	 * @var        string
	 */
	protected $dfr_lixi_salida_dbo6;

	/**
	 * The value for the dfr_lixi_salida_sst2 field.
	 * @var        string
	 */
	protected $dfr_lixi_salida_sst2;

	/**
	 * The value for the dfr_descarga_lixi_rio field.
	 * @var        boolean
	 */
	protected $dfr_descarga_lixi_rio;

	/**
	 * The value for the dfr_descarga_lixi_lago field.
	 * @var        boolean
	 */
	protected $dfr_descarga_lixi_lago;

	/**
	 * The value for the dfr_descarga_lixi_mar field.
	 * @var        boolean
	 */
	protected $dfr_descarga_lixi_mar;

	/**
	 * The value for the dfr_descarga_lixi_suelo field.
	 * @var        boolean
	 */
	protected $dfr_descarga_lixi_suelo;

	/**
	 * The value for the dfr_descarga_lixi_rio_nombre field.
	 * @var        string
	 */
	protected $dfr_descarga_lixi_rio_nombre;

	/**
	 * The value for the dfr_descarga_lixi_lago_nombre field.
	 * @var        string
	 */
	protected $dfr_descarga_lixi_lago_nombre;

	/**
	 * The value for the dfr_descarga_lixi_mar_nombre field.
	 * @var        string
	 */
	protected $dfr_descarga_lixi_mar_nombre;

	/**
	 * The value for the dfr_descarga_lixi_suelo_nombre field.
	 * @var        string
	 */
	protected $dfr_descarga_lixi_suelo_nombre;

	/**
	 * The value for the dfr_programa_control_vectores field.
	 * @var        boolean
	 */
	protected $dfr_programa_control_vectores;

	/**
	 * The value for the dfr_programa_control_gases field.
	 * @var        boolean
	 */
	protected $dfr_programa_control_gases;

	/**
	 * @var        Autoridadambiental
	 */
	protected $aAutoridadambiental;

	/**
	 * @var        Estadogeneral
	 */
	protected $aEstadogeneral;

	/**
	 * @var        Departamento
	 */
	protected $aDepartamento;

	/**
	 * @var        Municipio
	 */
	protected $aMunicipio;

	/**
	 * @var        Tecnicooperativo
	 */
	protected $aTecnicooperativo;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	// symfony behavior
	
	const PEER = 'DisposicionfinalresiduosaseoPeer';

	/**
	 * Get the [dfr_id] column value.
	 * 
	 * @return     int
	 */
	public function getDfrId()
	{
		return $this->dfr_id;
	}

	/**
	 * Get the [dfr_autoridad_autonoma_id] column value.
	 * 
	 * @return     int
	 */
	public function getDfrAutoridadAutonomaId()
	{
		return $this->dfr_autoridad_autonoma_id;
	}

	/**
	 * Get the [dfr_estado_via_acceso_sitio_id] column value.
	 * 
	 * @return     int
	 */
	public function getDfrEstadoViaAccesoSitioId()
	{
		return $this->dfr_estado_via_acceso_sitio_id;
	}

	/**
	 * Get the [dfr_departamento_dispocision_id] column value.
	 * 
	 * @return     int
	 */
	public function getDfrDepartamentoDispocisionId()
	{
		return $this->dfr_departamento_dispocision_id;
	}

	/**
	 * Get the [dfr_municipio_disposicion_id] column value.
	 * 
	 * @return     int
	 */
	public function getDfrMunicipioDisposicionId()
	{
		return $this->dfr_municipio_disposicion_id;
	}

	/**
	 * Get the [dfr_top_id] column value.
	 * 
	 * @return     int
	 */
	public function getDfrTopId()
	{
		return $this->dfr_top_id;
	}

	/**
	 * Get the [dfr_contrata_disposicion_final] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrContrataDisposicionFinal()
	{
		return $this->dfr_contrata_disposicion_final;
	}

	/**
	 * Get the [dfr_nombre_entidad_prestadora_servicio_disposicion] column value.
	 * 
	 * @return     string
	 */
	public function getDfrNombreEntidadPrestadoraServicioDisposicion()
	{
		return $this->dfr_nombre_entidad_prestadora_servicio_disposicion;
	}

	/**
	 * Get the [dfr_corregimiento_disposicion] column value.
	 * 
	 * @return     string
	 */
	public function getDfrCorregimientoDisposicion()
	{
		return $this->dfr_corregimiento_disposicion;
	}

	/**
	 * Get the [dfr_vereda_disposicion] column value.
	 * 
	 * @return     string
	 */
	public function getDfrVeredaDisposicion()
	{
		return $this->dfr_vereda_disposicion;
	}

	/**
	 * Get the [dfr_cuenta_autorizacion_ambiental_disposicion] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrCuentaAutorizacionAmbientalDisposicion()
	{
		return $this->dfr_cuenta_autorizacion_ambiental_disposicion;
	}

	/**
	 * Get the [dfr_tipo_autorizacion_ambiental] column value.
	 * 
	 * @return     string
	 */
	public function getDfrTipoAutorizacionAmbiental()
	{
		return $this->dfr_tipo_autorizacion_ambiental;
	}

	/**
	 * Get the [dfr_resolucion_autoriza_disposicion] column value.
	 * 
	 * @return     string
	 */
	public function getDfrResolucionAutorizaDisposicion()
	{
		return $this->dfr_resolucion_autoriza_disposicion;
	}

	/**
	 * Get the [optionally formatted] temporal [dfr_fecha_resolucion] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDfrFechaResolucion($format = 'Y-m-d')
	{
		if ($this->dfr_fecha_resolucion === null) {
			return null;
		}



		try {
			$dt = new DateTime($this->dfr_fecha_resolucion);
		} catch (Exception $x) {
			throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->dfr_fecha_resolucion, true), $x);
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [optionally formatted] temporal [dfr_fecha_terminacion_resolucion] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDfrFechaTerminacionResolucion($format = 'Y-m-d')
	{
		if ($this->dfr_fecha_terminacion_resolucion === null) {
			return null;
		}



		try {
			$dt = new DateTime($this->dfr_fecha_terminacion_resolucion);
		} catch (Exception $x) {
			throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->dfr_fecha_terminacion_resolucion, true), $x);
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [optionally formatted] temporal [dfr_fecha_terminacion_vida_util_sitio_disposicion] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDfrFechaTerminacionVidaUtilSitioDisposicion($format = 'Y-m-d')
	{
		if ($this->dfr_fecha_terminacion_vida_util_sitio_disposicion === null) {
			return null;
		}



		try {
			$dt = new DateTime($this->dfr_fecha_terminacion_vida_util_sitio_disposicion);
		} catch (Exception $x) {
			throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->dfr_fecha_terminacion_vida_util_sitio_disposicion, true), $x);
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [dfr_cantidad_anual_residuos_botadero_cielo_abierto] column value.
	 * 
	 * @return     string
	 */
	public function getDfrCantidadAnualResiduosBotaderoCieloAbierto()
	{
		return $this->dfr_cantidad_anual_residuos_botadero_cielo_abierto;
	}

	/**
	 * Get the [dfr_cantidad_anual_residuos_relleno_sanitario] column value.
	 * 
	 * @return     string
	 */
	public function getDfrCantidadAnualResiduosRellenoSanitario()
	{
		return $this->dfr_cantidad_anual_residuos_relleno_sanitario;
	}

	/**
	 * Get the [dfr_dist_centro_poblado_mas_cercano_sitio] column value.
	 * 
	 * @return     string
	 */
	public function getDfrDistCentroPobladoMasCercanoSitio()
	{
		return $this->dfr_dist_centro_poblado_mas_cercano_sitio;
	}

	/**
	 * Get the [dfr_dist_cuerpo_agua_mas_cercano_sitio] column value.
	 * 
	 * @return     string
	 */
	public function getDfrDistCuerpoAguaMasCercanoSitio()
	{
		return $this->dfr_dist_cuerpo_agua_mas_cercano_sitio;
	}

	/**
	 * Get the [drf_anios_utilizacion_sitio] column value.
	 * 
	 * @return     int
	 */
	public function getDrfAniosUtilizacionSitio()
	{
		return $this->drf_anios_utilizacion_sitio;
	}

	/**
	 * Get the [dfr_area_destinada_para_disposicion_sitio] column value.
	 * 
	 * @return     string
	 */
	public function getDfrAreaDestinadaParaDisposicionSitio()
	{
		return $this->dfr_area_destinada_para_disposicion_sitio;
	}

	/**
	 * Get the [dfr_si_relleno_tipo_relleno] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrSiRellenoTipoRelleno()
	{
		return $this->dfr_si_relleno_tipo_relleno;
	}

	/**
	 * Get the [dfr_presencia_recicladores_sitio] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrPresenciaRecicladoresSitio()
	{
		return $this->dfr_presencia_recicladores_sitio;
	}

	/**
	 * Get the [dfr_cantidad_personas_sitio] column value.
	 * 
	 * @return     int
	 */
	public function getDfrCantidadPersonasSitio()
	{
		return $this->dfr_cantidad_personas_sitio;
	}

	/**
	 * Get the [dfr_tratamiento_lixiviados_sitio] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrTratamientoLixiviadosSitio()
	{
		return $this->dfr_tratamiento_lixiviados_sitio;
	}

	/**
	 * Get the [dfr_tipo_tratamiento_lixiviados_sitio] column value.
	 * 
	 * @return     string
	 */
	public function getDfrTipoTratamientoLixiviadosSitio()
	{
		return $this->dfr_tipo_tratamiento_lixiviados_sitio;
	}

	/**
	 * Get the [optionally formatted] temporal [dfr_lixi_entrada_fecha] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDfrLixiEntradaFecha($format = 'Y-m-d')
	{
		if ($this->dfr_lixi_entrada_fecha === null) {
			return null;
		}



		try {
			$dt = new DateTime($this->dfr_lixi_entrada_fecha);
		} catch (Exception $x) {
			throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->dfr_lixi_entrada_fecha, true), $x);
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [dfr_lixi_entrada_caudal] column value.
	 * 
	 * @return     string
	 */
	public function getDfrLixiEntradaCaudal()
	{
		return $this->dfr_lixi_entrada_caudal;
	}

	/**
	 * Get the [dfr_lixi_entrada_dbo5] column value.
	 * 
	 * @return     string
	 */
	public function getDfrLixiEntradaDbo5()
	{
		return $this->dfr_lixi_entrada_dbo5;
	}

	/**
	 * Get the [dfr_lixi_entrada_sst] column value.
	 * 
	 * @return     string
	 */
	public function getDfrLixiEntradaSst()
	{
		return $this->dfr_lixi_entrada_sst;
	}

	/**
	 * Get the [optionally formatted] temporal [dfr_lixi_salida_fecha2] column value.
	 * 
	 *
	 * @param      string $format The date/time format string (either date()-style or strftime()-style).
	 *							If format is NULL, then the raw DateTime object will be returned.
	 * @return     mixed Formatted date/time value as string or DateTime object (if format is NULL), NULL if column is NULL
	 * @throws     PropelException - if unable to parse/validate the date/time value.
	 */
	public function getDfrLixiSalidaFecha2($format = 'Y-m-d')
	{
		if ($this->dfr_lixi_salida_fecha2 === null) {
			return null;
		}



		try {
			$dt = new DateTime($this->dfr_lixi_salida_fecha2);
		} catch (Exception $x) {
			throw new PropelException("Internally stored date/time/timestamp value could not be converted to DateTime: " . var_export($this->dfr_lixi_salida_fecha2, true), $x);
		}

		if ($format === null) {
			// Because propel.useDateTimeClass is TRUE, we return a DateTime object.
			return $dt;
		} elseif (strpos($format, '%') !== false) {
			return strftime($format, $dt->format('U'));
		} else {
			return $dt->format($format);
		}
	}

	/**
	 * Get the [dfr_lixi_salida_caudal2] column value.
	 * 
	 * @return     string
	 */
	public function getDfrLixiSalidaCaudal2()
	{
		return $this->dfr_lixi_salida_caudal2;
	}

	/**
	 * Get the [dfr_lixi_salida_dbo6] column value.
	 * 
	 * @return     string
	 */
	public function getDfrLixiSalidaDbo6()
	{
		return $this->dfr_lixi_salida_dbo6;
	}

	/**
	 * Get the [dfr_lixi_salida_sst2] column value.
	 * 
	 * @return     string
	 */
	public function getDfrLixiSalidaSst2()
	{
		return $this->dfr_lixi_salida_sst2;
	}

	/**
	 * Get the [dfr_descarga_lixi_rio] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrDescargaLixiRio()
	{
		return $this->dfr_descarga_lixi_rio;
	}

	/**
	 * Get the [dfr_descarga_lixi_lago] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrDescargaLixiLago()
	{
		return $this->dfr_descarga_lixi_lago;
	}

	/**
	 * Get the [dfr_descarga_lixi_mar] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrDescargaLixiMar()
	{
		return $this->dfr_descarga_lixi_mar;
	}

	/**
	 * Get the [dfr_descarga_lixi_suelo] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrDescargaLixiSuelo()
	{
		return $this->dfr_descarga_lixi_suelo;
	}

	/**
	 * Get the [dfr_descarga_lixi_rio_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getDfrDescargaLixiRioNombre()
	{
		return $this->dfr_descarga_lixi_rio_nombre;
	}

	/**
	 * Get the [dfr_descarga_lixi_lago_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getDfrDescargaLixiLagoNombre()
	{
		return $this->dfr_descarga_lixi_lago_nombre;
	}

	/**
	 * Get the [dfr_descarga_lixi_mar_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getDfrDescargaLixiMarNombre()
	{
		return $this->dfr_descarga_lixi_mar_nombre;
	}

	/**
	 * Get the [dfr_descarga_lixi_suelo_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getDfrDescargaLixiSueloNombre()
	{
		return $this->dfr_descarga_lixi_suelo_nombre;
	}

	/**
	 * Get the [dfr_programa_control_vectores] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrProgramaControlVectores()
	{
		return $this->dfr_programa_control_vectores;
	}

	/**
	 * Get the [dfr_programa_control_gases] column value.
	 * 
	 * @return     boolean
	 */
	public function getDfrProgramaControlGases()
	{
		return $this->dfr_programa_control_gases;
	}

	/**
	 * Set the value of [dfr_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_id !== $v) {
			$this->dfr_id = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_ID;
		}

		return $this;
	} // setDfrId()

	/**
	 * Set the value of [dfr_autoridad_autonoma_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrAutoridadAutonomaId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_autoridad_autonoma_id !== $v) {
			$this->dfr_autoridad_autonoma_id = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_AUTORIDAD_AUTONOMA_ID;
		}

		if ($this->aAutoridadambiental !== null && $this->aAutoridadambiental->getAuaId() !== $v) {
			$this->aAutoridadambiental = null;
		}

		return $this;
	} // setDfrAutoridadAutonomaId()

	/**
	 * Set the value of [dfr_estado_via_acceso_sitio_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrEstadoViaAccesoSitioId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_estado_via_acceso_sitio_id !== $v) {
			$this->dfr_estado_via_acceso_sitio_id = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_ESTADO_VIA_ACCESO_SITIO_ID;
		}

		if ($this->aEstadogeneral !== null && $this->aEstadogeneral->getEsgId() !== $v) {
			$this->aEstadogeneral = null;
		}

		return $this;
	} // setDfrEstadoViaAccesoSitioId()

	/**
	 * Set the value of [dfr_departamento_dispocision_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDepartamentoDispocisionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_departamento_dispocision_id !== $v) {
			$this->dfr_departamento_dispocision_id = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DEPARTAMENTO_DISPOCISION_ID;
		}

		if ($this->aDepartamento !== null && $this->aDepartamento->getDepId() !== $v) {
			$this->aDepartamento = null;
		}

		return $this;
	} // setDfrDepartamentoDispocisionId()

	/**
	 * Set the value of [dfr_municipio_disposicion_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrMunicipioDisposicionId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_municipio_disposicion_id !== $v) {
			$this->dfr_municipio_disposicion_id = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_MUNICIPIO_DISPOSICION_ID;
		}

		if ($this->aMunicipio !== null && $this->aMunicipio->getMunId() !== $v) {
			$this->aMunicipio = null;
		}

		return $this;
	} // setDfrMunicipioDisposicionId()

	/**
	 * Set the value of [dfr_top_id] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrTopId($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_top_id !== $v) {
			$this->dfr_top_id = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_TOP_ID;
		}

		if ($this->aTecnicooperativo !== null && $this->aTecnicooperativo->getTopId() !== $v) {
			$this->aTecnicooperativo = null;
		}

		return $this;
	} // setDfrTopId()

	/**
	 * Set the value of [dfr_contrata_disposicion_final] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrContrataDisposicionFinal($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_contrata_disposicion_final !== $v) {
			$this->dfr_contrata_disposicion_final = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_CONTRATA_DISPOSICION_FINAL;
		}

		return $this;
	} // setDfrContrataDisposicionFinal()

	/**
	 * Set the value of [dfr_nombre_entidad_prestadora_servicio_disposicion] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrNombreEntidadPrestadoraServicioDisposicion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_nombre_entidad_prestadora_servicio_disposicion !== $v) {
			$this->dfr_nombre_entidad_prestadora_servicio_disposicion = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_NOMBRE_ENTIDAD_PRESTADORA_SERVICIO_DISPOSICION;
		}

		return $this;
	} // setDfrNombreEntidadPrestadoraServicioDisposicion()

	/**
	 * Set the value of [dfr_corregimiento_disposicion] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrCorregimientoDisposicion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_corregimiento_disposicion !== $v) {
			$this->dfr_corregimiento_disposicion = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_CORREGIMIENTO_DISPOSICION;
		}

		return $this;
	} // setDfrCorregimientoDisposicion()

	/**
	 * Set the value of [dfr_vereda_disposicion] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrVeredaDisposicion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_vereda_disposicion !== $v) {
			$this->dfr_vereda_disposicion = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_VEREDA_DISPOSICION;
		}

		return $this;
	} // setDfrVeredaDisposicion()

	/**
	 * Set the value of [dfr_cuenta_autorizacion_ambiental_disposicion] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrCuentaAutorizacionAmbientalDisposicion($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_cuenta_autorizacion_ambiental_disposicion !== $v) {
			$this->dfr_cuenta_autorizacion_ambiental_disposicion = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_CUENTA_AUTORIZACION_AMBIENTAL_DISPOSICION;
		}

		return $this;
	} // setDfrCuentaAutorizacionAmbientalDisposicion()

	/**
	 * Set the value of [dfr_tipo_autorizacion_ambiental] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrTipoAutorizacionAmbiental($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_tipo_autorizacion_ambiental !== $v) {
			$this->dfr_tipo_autorizacion_ambiental = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_TIPO_AUTORIZACION_AMBIENTAL;
		}

		return $this;
	} // setDfrTipoAutorizacionAmbiental()

	/**
	 * Set the value of [dfr_resolucion_autoriza_disposicion] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrResolucionAutorizaDisposicion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_resolucion_autoriza_disposicion !== $v) {
			$this->dfr_resolucion_autoriza_disposicion = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_RESOLUCION_AUTORIZA_DISPOSICION;
		}

		return $this;
	} // setDfrResolucionAutorizaDisposicion()

	/**
	 * Sets the value of [dfr_fecha_resolucion] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrFechaResolucion($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->dfr_fecha_resolucion !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->dfr_fecha_resolucion !== null && $tmpDt = new DateTime($this->dfr_fecha_resolucion)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->dfr_fecha_resolucion = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_FECHA_RESOLUCION;
			}
		} // if either are not null

		return $this;
	} // setDfrFechaResolucion()

	/**
	 * Sets the value of [dfr_fecha_terminacion_resolucion] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrFechaTerminacionResolucion($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->dfr_fecha_terminacion_resolucion !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->dfr_fecha_terminacion_resolucion !== null && $tmpDt = new DateTime($this->dfr_fecha_terminacion_resolucion)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->dfr_fecha_terminacion_resolucion = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_FECHA_TERMINACION_RESOLUCION;
			}
		} // if either are not null

		return $this;
	} // setDfrFechaTerminacionResolucion()

	/**
	 * Sets the value of [dfr_fecha_terminacion_vida_util_sitio_disposicion] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrFechaTerminacionVidaUtilSitioDisposicion($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->dfr_fecha_terminacion_vida_util_sitio_disposicion !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->dfr_fecha_terminacion_vida_util_sitio_disposicion !== null && $tmpDt = new DateTime($this->dfr_fecha_terminacion_vida_util_sitio_disposicion)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->dfr_fecha_terminacion_vida_util_sitio_disposicion = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_FECHA_TERMINACION_VIDA_UTIL_SITIO_DISPOSICION;
			}
		} // if either are not null

		return $this;
	} // setDfrFechaTerminacionVidaUtilSitioDisposicion()

	/**
	 * Set the value of [dfr_cantidad_anual_residuos_botadero_cielo_abierto] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrCantidadAnualResiduosBotaderoCieloAbierto($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_cantidad_anual_residuos_botadero_cielo_abierto !== $v) {
			$this->dfr_cantidad_anual_residuos_botadero_cielo_abierto = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_ANUAL_RESIDUOS_BOTADERO_CIELO_ABIERTO;
		}

		return $this;
	} // setDfrCantidadAnualResiduosBotaderoCieloAbierto()

	/**
	 * Set the value of [dfr_cantidad_anual_residuos_relleno_sanitario] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrCantidadAnualResiduosRellenoSanitario($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_cantidad_anual_residuos_relleno_sanitario !== $v) {
			$this->dfr_cantidad_anual_residuos_relleno_sanitario = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_ANUAL_RESIDUOS_RELLENO_SANITARIO;
		}

		return $this;
	} // setDfrCantidadAnualResiduosRellenoSanitario()

	/**
	 * Set the value of [dfr_dist_centro_poblado_mas_cercano_sitio] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDistCentroPobladoMasCercanoSitio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_dist_centro_poblado_mas_cercano_sitio !== $v) {
			$this->dfr_dist_centro_poblado_mas_cercano_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DIST_CENTRO_POBLADO_MAS_CERCANO_SITIO;
		}

		return $this;
	} // setDfrDistCentroPobladoMasCercanoSitio()

	/**
	 * Set the value of [dfr_dist_cuerpo_agua_mas_cercano_sitio] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDistCuerpoAguaMasCercanoSitio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_dist_cuerpo_agua_mas_cercano_sitio !== $v) {
			$this->dfr_dist_cuerpo_agua_mas_cercano_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DIST_CUERPO_AGUA_MAS_CERCANO_SITIO;
		}

		return $this;
	} // setDfrDistCuerpoAguaMasCercanoSitio()

	/**
	 * Set the value of [drf_anios_utilizacion_sitio] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDrfAniosUtilizacionSitio($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->drf_anios_utilizacion_sitio !== $v) {
			$this->drf_anios_utilizacion_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DRF_ANIOS_UTILIZACION_SITIO;
		}

		return $this;
	} // setDrfAniosUtilizacionSitio()

	/**
	 * Set the value of [dfr_area_destinada_para_disposicion_sitio] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrAreaDestinadaParaDisposicionSitio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_area_destinada_para_disposicion_sitio !== $v) {
			$this->dfr_area_destinada_para_disposicion_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_AREA_DESTINADA_PARA_DISPOSICION_SITIO;
		}

		return $this;
	} // setDfrAreaDestinadaParaDisposicionSitio()

	/**
	 * Set the value of [dfr_si_relleno_tipo_relleno] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrSiRellenoTipoRelleno($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_si_relleno_tipo_relleno !== $v) {
			$this->dfr_si_relleno_tipo_relleno = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_SI_RELLENO_TIPO_RELLENO;
		}

		return $this;
	} // setDfrSiRellenoTipoRelleno()

	/**
	 * Set the value of [dfr_presencia_recicladores_sitio] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrPresenciaRecicladoresSitio($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_presencia_recicladores_sitio !== $v) {
			$this->dfr_presencia_recicladores_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_PRESENCIA_RECICLADORES_SITIO;
		}

		return $this;
	} // setDfrPresenciaRecicladoresSitio()

	/**
	 * Set the value of [dfr_cantidad_personas_sitio] column.
	 * 
	 * @param      int $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrCantidadPersonasSitio($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dfr_cantidad_personas_sitio !== $v) {
			$this->dfr_cantidad_personas_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_PERSONAS_SITIO;
		}

		return $this;
	} // setDfrCantidadPersonasSitio()

	/**
	 * Set the value of [dfr_tratamiento_lixiviados_sitio] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrTratamientoLixiviadosSitio($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_tratamiento_lixiviados_sitio !== $v) {
			$this->dfr_tratamiento_lixiviados_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_TRATAMIENTO_LIXIVIADOS_SITIO;
		}

		return $this;
	} // setDfrTratamientoLixiviadosSitio()

	/**
	 * Set the value of [dfr_tipo_tratamiento_lixiviados_sitio] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrTipoTratamientoLixiviadosSitio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_tipo_tratamiento_lixiviados_sitio !== $v) {
			$this->dfr_tipo_tratamiento_lixiviados_sitio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_TIPO_TRATAMIENTO_LIXIVIADOS_SITIO;
		}

		return $this;
	} // setDfrTipoTratamientoLixiviadosSitio()

	/**
	 * Sets the value of [dfr_lixi_entrada_fecha] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiEntradaFecha($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->dfr_lixi_entrada_fecha !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->dfr_lixi_entrada_fecha !== null && $tmpDt = new DateTime($this->dfr_lixi_entrada_fecha)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->dfr_lixi_entrada_fecha = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_FECHA;
			}
		} // if either are not null

		return $this;
	} // setDfrLixiEntradaFecha()

	/**
	 * Set the value of [dfr_lixi_entrada_caudal] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiEntradaCaudal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_lixi_entrada_caudal !== $v) {
			$this->dfr_lixi_entrada_caudal = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_CAUDAL;
		}

		return $this;
	} // setDfrLixiEntradaCaudal()

	/**
	 * Set the value of [dfr_lixi_entrada_dbo5] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiEntradaDbo5($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_lixi_entrada_dbo5 !== $v) {
			$this->dfr_lixi_entrada_dbo5 = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_DBO5;
		}

		return $this;
	} // setDfrLixiEntradaDbo5()

	/**
	 * Set the value of [dfr_lixi_entrada_sst] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiEntradaSst($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_lixi_entrada_sst !== $v) {
			$this->dfr_lixi_entrada_sst = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_SST;
		}

		return $this;
	} // setDfrLixiEntradaSst()

	/**
	 * Sets the value of [dfr_lixi_salida_fecha2] column to a normalized version of the date/time value specified.
	 * 
	 * @param      mixed $v string, integer (timestamp), or DateTime value.  Empty string will
	 *						be treated as NULL for temporal objects.
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiSalidaFecha2($v)
	{
		// we treat '' as NULL for temporal objects because DateTime('') == DateTime('now')
		// -- which is unexpected, to say the least.
		if ($v === null || $v === '') {
			$dt = null;
		} elseif ($v instanceof DateTime) {
			$dt = $v;
		} else {
			// some string/numeric value passed; we normalize that so that we can
			// validate it.
			try {
				if (is_numeric($v)) { // if it's a unix timestamp
					$dt = new DateTime('@'.$v, new DateTimeZone('UTC'));
					// We have to explicitly specify and then change the time zone because of a
					// DateTime bug: http://bugs.php.net/bug.php?id=43003
					$dt->setTimeZone(new DateTimeZone(date_default_timezone_get()));
				} else {
					$dt = new DateTime($v);
				}
			} catch (Exception $x) {
				throw new PropelException('Error parsing date/time value: ' . var_export($v, true), $x);
			}
		}

		if ( $this->dfr_lixi_salida_fecha2 !== null || $dt !== null ) {
			// (nested ifs are a little easier to read in this case)

			$currNorm = ($this->dfr_lixi_salida_fecha2 !== null && $tmpDt = new DateTime($this->dfr_lixi_salida_fecha2)) ? $tmpDt->format('Y-m-d') : null;
			$newNorm = ($dt !== null) ? $dt->format('Y-m-d') : null;

			if ( ($currNorm !== $newNorm) // normalized values don't match 
					)
			{
				$this->dfr_lixi_salida_fecha2 = ($dt ? $dt->format('Y-m-d') : null);
				$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_FECHA2;
			}
		} // if either are not null

		return $this;
	} // setDfrLixiSalidaFecha2()

	/**
	 * Set the value of [dfr_lixi_salida_caudal2] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiSalidaCaudal2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_lixi_salida_caudal2 !== $v) {
			$this->dfr_lixi_salida_caudal2 = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_CAUDAL2;
		}

		return $this;
	} // setDfrLixiSalidaCaudal2()

	/**
	 * Set the value of [dfr_lixi_salida_dbo6] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiSalidaDbo6($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_lixi_salida_dbo6 !== $v) {
			$this->dfr_lixi_salida_dbo6 = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_DBO6;
		}

		return $this;
	} // setDfrLixiSalidaDbo6()

	/**
	 * Set the value of [dfr_lixi_salida_sst2] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrLixiSalidaSst2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_lixi_salida_sst2 !== $v) {
			$this->dfr_lixi_salida_sst2 = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_SST2;
		}

		return $this;
	} // setDfrLixiSalidaSst2()

	/**
	 * Set the value of [dfr_descarga_lixi_rio] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiRio($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_descarga_lixi_rio !== $v) {
			$this->dfr_descarga_lixi_rio = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_RIO;
		}

		return $this;
	} // setDfrDescargaLixiRio()

	/**
	 * Set the value of [dfr_descarga_lixi_lago] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiLago($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_descarga_lixi_lago !== $v) {
			$this->dfr_descarga_lixi_lago = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_LAGO;
		}

		return $this;
	} // setDfrDescargaLixiLago()

	/**
	 * Set the value of [dfr_descarga_lixi_mar] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiMar($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_descarga_lixi_mar !== $v) {
			$this->dfr_descarga_lixi_mar = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_MAR;
		}

		return $this;
	} // setDfrDescargaLixiMar()

	/**
	 * Set the value of [dfr_descarga_lixi_suelo] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiSuelo($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_descarga_lixi_suelo !== $v) {
			$this->dfr_descarga_lixi_suelo = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_SUELO;
		}

		return $this;
	} // setDfrDescargaLixiSuelo()

	/**
	 * Set the value of [dfr_descarga_lixi_rio_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiRioNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_descarga_lixi_rio_nombre !== $v) {
			$this->dfr_descarga_lixi_rio_nombre = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_RIO_NOMBRE;
		}

		return $this;
	} // setDfrDescargaLixiRioNombre()

	/**
	 * Set the value of [dfr_descarga_lixi_lago_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiLagoNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_descarga_lixi_lago_nombre !== $v) {
			$this->dfr_descarga_lixi_lago_nombre = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_LAGO_NOMBRE;
		}

		return $this;
	} // setDfrDescargaLixiLagoNombre()

	/**
	 * Set the value of [dfr_descarga_lixi_mar_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiMarNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_descarga_lixi_mar_nombre !== $v) {
			$this->dfr_descarga_lixi_mar_nombre = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_MAR_NOMBRE;
		}

		return $this;
	} // setDfrDescargaLixiMarNombre()

	/**
	 * Set the value of [dfr_descarga_lixi_suelo_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrDescargaLixiSueloNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dfr_descarga_lixi_suelo_nombre !== $v) {
			$this->dfr_descarga_lixi_suelo_nombre = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_SUELO_NOMBRE;
		}

		return $this;
	} // setDfrDescargaLixiSueloNombre()

	/**
	 * Set the value of [dfr_programa_control_vectores] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrProgramaControlVectores($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_programa_control_vectores !== $v) {
			$this->dfr_programa_control_vectores = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_PROGRAMA_CONTROL_VECTORES;
		}

		return $this;
	} // setDfrProgramaControlVectores()

	/**
	 * Set the value of [dfr_programa_control_gases] column.
	 * 
	 * @param      boolean $v new value
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 */
	public function setDfrProgramaControlGases($v)
	{
		if ($v !== null) {
			$v = (boolean) $v;
		}

		if ($this->dfr_programa_control_gases !== $v) {
			$this->dfr_programa_control_gases = $v;
			$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_PROGRAMA_CONTROL_GASES;
		}

		return $this;
	} // setDfrProgramaControlGases()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->dfr_id = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->dfr_autoridad_autonoma_id = ($row[$startcol + 1] !== null) ? (int) $row[$startcol + 1] : null;
			$this->dfr_estado_via_acceso_sitio_id = ($row[$startcol + 2] !== null) ? (int) $row[$startcol + 2] : null;
			$this->dfr_departamento_dispocision_id = ($row[$startcol + 3] !== null) ? (int) $row[$startcol + 3] : null;
			$this->dfr_municipio_disposicion_id = ($row[$startcol + 4] !== null) ? (int) $row[$startcol + 4] : null;
			$this->dfr_top_id = ($row[$startcol + 5] !== null) ? (int) $row[$startcol + 5] : null;
			$this->dfr_contrata_disposicion_final = ($row[$startcol + 6] !== null) ? (boolean) $row[$startcol + 6] : null;
			$this->dfr_nombre_entidad_prestadora_servicio_disposicion = ($row[$startcol + 7] !== null) ? (string) $row[$startcol + 7] : null;
			$this->dfr_corregimiento_disposicion = ($row[$startcol + 8] !== null) ? (string) $row[$startcol + 8] : null;
			$this->dfr_vereda_disposicion = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->dfr_cuenta_autorizacion_ambiental_disposicion = ($row[$startcol + 10] !== null) ? (boolean) $row[$startcol + 10] : null;
			$this->dfr_tipo_autorizacion_ambiental = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->dfr_resolucion_autoriza_disposicion = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->dfr_fecha_resolucion = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->dfr_fecha_terminacion_resolucion = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->dfr_fecha_terminacion_vida_util_sitio_disposicion = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->dfr_cantidad_anual_residuos_botadero_cielo_abierto = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->dfr_cantidad_anual_residuos_relleno_sanitario = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->dfr_dist_centro_poblado_mas_cercano_sitio = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->dfr_dist_cuerpo_agua_mas_cercano_sitio = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->drf_anios_utilizacion_sitio = ($row[$startcol + 20] !== null) ? (int) $row[$startcol + 20] : null;
			$this->dfr_area_destinada_para_disposicion_sitio = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->dfr_si_relleno_tipo_relleno = ($row[$startcol + 22] !== null) ? (boolean) $row[$startcol + 22] : null;
			$this->dfr_presencia_recicladores_sitio = ($row[$startcol + 23] !== null) ? (boolean) $row[$startcol + 23] : null;
			$this->dfr_cantidad_personas_sitio = ($row[$startcol + 24] !== null) ? (int) $row[$startcol + 24] : null;
			$this->dfr_tratamiento_lixiviados_sitio = ($row[$startcol + 25] !== null) ? (boolean) $row[$startcol + 25] : null;
			$this->dfr_tipo_tratamiento_lixiviados_sitio = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->dfr_lixi_entrada_fecha = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->dfr_lixi_entrada_caudal = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->dfr_lixi_entrada_dbo5 = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->dfr_lixi_entrada_sst = ($row[$startcol + 30] !== null) ? (string) $row[$startcol + 30] : null;
			$this->dfr_lixi_salida_fecha2 = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->dfr_lixi_salida_caudal2 = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->dfr_lixi_salida_dbo6 = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->dfr_lixi_salida_sst2 = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->dfr_descarga_lixi_rio = ($row[$startcol + 35] !== null) ? (boolean) $row[$startcol + 35] : null;
			$this->dfr_descarga_lixi_lago = ($row[$startcol + 36] !== null) ? (boolean) $row[$startcol + 36] : null;
			$this->dfr_descarga_lixi_mar = ($row[$startcol + 37] !== null) ? (boolean) $row[$startcol + 37] : null;
			$this->dfr_descarga_lixi_suelo = ($row[$startcol + 38] !== null) ? (boolean) $row[$startcol + 38] : null;
			$this->dfr_descarga_lixi_rio_nombre = ($row[$startcol + 39] !== null) ? (string) $row[$startcol + 39] : null;
			$this->dfr_descarga_lixi_lago_nombre = ($row[$startcol + 40] !== null) ? (string) $row[$startcol + 40] : null;
			$this->dfr_descarga_lixi_mar_nombre = ($row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->dfr_descarga_lixi_suelo_nombre = ($row[$startcol + 42] !== null) ? (string) $row[$startcol + 42] : null;
			$this->dfr_programa_control_vectores = ($row[$startcol + 43] !== null) ? (boolean) $row[$startcol + 43] : null;
			$this->dfr_programa_control_gases = ($row[$startcol + 44] !== null) ? (boolean) $row[$startcol + 44] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 45; // 45 = DisposicionfinalresiduosaseoPeer::NUM_COLUMNS - DisposicionfinalresiduosaseoPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Disposicionfinalresiduosaseo object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

		if ($this->aAutoridadambiental !== null && $this->dfr_autoridad_autonoma_id !== $this->aAutoridadambiental->getAuaId()) {
			$this->aAutoridadambiental = null;
		}
		if ($this->aEstadogeneral !== null && $this->dfr_estado_via_acceso_sitio_id !== $this->aEstadogeneral->getEsgId()) {
			$this->aEstadogeneral = null;
		}
		if ($this->aDepartamento !== null && $this->dfr_departamento_dispocision_id !== $this->aDepartamento->getDepId()) {
			$this->aDepartamento = null;
		}
		if ($this->aMunicipio !== null && $this->dfr_municipio_disposicion_id !== $this->aMunicipio->getMunId()) {
			$this->aMunicipio = null;
		}
		if ($this->aTecnicooperativo !== null && $this->dfr_top_id !== $this->aTecnicooperativo->getTopId()) {
			$this->aTecnicooperativo = null;
		}
	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(DisposicionfinalresiduosaseoPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = DisposicionfinalresiduosaseoPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

			$this->aAutoridadambiental = null;
			$this->aEstadogeneral = null;
			$this->aDepartamento = null;
			$this->aMunicipio = null;
			$this->aTecnicooperativo = null;
		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(DisposicionfinalresiduosaseoPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$ret = $this->preDelete($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseDisposicionfinalresiduosaseo:delete:pre') as $callable)
			{
			  if (call_user_func($callable, $this, $con))
			  {
			    $con->commit();
			
			    return;
			  }
			}

			if ($ret) {
				DisposicionfinalresiduosaseoPeer::doDelete($this, $con);
				$this->postDelete($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseDisposicionfinalresiduosaseo:delete:post') as $callable)
				{
				  call_user_func($callable, $this, $con);
				}

				$this->setDeleted(true);
				$con->commit();
			} else {
				$con->commit();
			}
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(DisposicionfinalresiduosaseoPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		$isInsert = $this->isNew();
		try {
			$ret = $this->preSave($con);
			// symfony_behaviors behavior
			foreach (sfMixer::getCallables('BaseDisposicionfinalresiduosaseo:save:pre') as $callable)
			{
			  if (is_integer($affectedRows = call_user_func($callable, $this, $con)))
			  {
			    $con->commit();
			
			    return $affectedRows;
			  }
			}

			if ($isInsert) {
				$ret = $ret && $this->preInsert($con);
			} else {
				$ret = $ret && $this->preUpdate($con);
			}
			if ($ret) {
				$affectedRows = $this->doSave($con);
				if ($isInsert) {
					$this->postInsert($con);
				} else {
					$this->postUpdate($con);
				}
				$this->postSave($con);
				// symfony_behaviors behavior
				foreach (sfMixer::getCallables('BaseDisposicionfinalresiduosaseo:save:post') as $callable)
				{
				  call_user_func($callable, $this, $con, $affectedRows);
				}

				DisposicionfinalresiduosaseoPeer::addInstanceToPool($this);
			} else {
				$affectedRows = 0;
			}
			$con->commit();
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			// We call the save method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aAutoridadambiental !== null) {
				if ($this->aAutoridadambiental->isModified() || $this->aAutoridadambiental->isNew()) {
					$affectedRows += $this->aAutoridadambiental->save($con);
				}
				$this->setAutoridadambiental($this->aAutoridadambiental);
			}

			if ($this->aEstadogeneral !== null) {
				if ($this->aEstadogeneral->isModified() || $this->aEstadogeneral->isNew()) {
					$affectedRows += $this->aEstadogeneral->save($con);
				}
				$this->setEstadogeneral($this->aEstadogeneral);
			}

			if ($this->aDepartamento !== null) {
				if ($this->aDepartamento->isModified() || $this->aDepartamento->isNew()) {
					$affectedRows += $this->aDepartamento->save($con);
				}
				$this->setDepartamento($this->aDepartamento);
			}

			if ($this->aMunicipio !== null) {
				if ($this->aMunicipio->isModified() || $this->aMunicipio->isNew()) {
					$affectedRows += $this->aMunicipio->save($con);
				}
				$this->setMunicipio($this->aMunicipio);
			}

			if ($this->aTecnicooperativo !== null) {
				if ($this->aTecnicooperativo->isModified() || $this->aTecnicooperativo->isNew()) {
					$affectedRows += $this->aTecnicooperativo->save($con);
				}
				$this->setTecnicooperativo($this->aTecnicooperativo);
			}

			if ($this->isNew() ) {
				$this->modifiedColumns[] = DisposicionfinalresiduosaseoPeer::DFR_ID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = DisposicionfinalresiduosaseoPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setDfrId($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += DisposicionfinalresiduosaseoPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			// We call the validate method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aAutoridadambiental !== null) {
				if (!$this->aAutoridadambiental->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aAutoridadambiental->getValidationFailures());
				}
			}

			if ($this->aEstadogeneral !== null) {
				if (!$this->aEstadogeneral->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aEstadogeneral->getValidationFailures());
				}
			}

			if ($this->aDepartamento !== null) {
				if (!$this->aDepartamento->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aDepartamento->getValidationFailures());
				}
			}

			if ($this->aMunicipio !== null) {
				if (!$this->aMunicipio->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aMunicipio->getValidationFailures());
				}
			}

			if ($this->aTecnicooperativo !== null) {
				if (!$this->aTecnicooperativo->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aTecnicooperativo->getValidationFailures());
				}
			}


			if (($retval = DisposicionfinalresiduosaseoPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = DisposicionfinalresiduosaseoPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getDfrId();
				break;
			case 1:
				return $this->getDfrAutoridadAutonomaId();
				break;
			case 2:
				return $this->getDfrEstadoViaAccesoSitioId();
				break;
			case 3:
				return $this->getDfrDepartamentoDispocisionId();
				break;
			case 4:
				return $this->getDfrMunicipioDisposicionId();
				break;
			case 5:
				return $this->getDfrTopId();
				break;
			case 6:
				return $this->getDfrContrataDisposicionFinal();
				break;
			case 7:
				return $this->getDfrNombreEntidadPrestadoraServicioDisposicion();
				break;
			case 8:
				return $this->getDfrCorregimientoDisposicion();
				break;
			case 9:
				return $this->getDfrVeredaDisposicion();
				break;
			case 10:
				return $this->getDfrCuentaAutorizacionAmbientalDisposicion();
				break;
			case 11:
				return $this->getDfrTipoAutorizacionAmbiental();
				break;
			case 12:
				return $this->getDfrResolucionAutorizaDisposicion();
				break;
			case 13:
				return $this->getDfrFechaResolucion();
				break;
			case 14:
				return $this->getDfrFechaTerminacionResolucion();
				break;
			case 15:
				return $this->getDfrFechaTerminacionVidaUtilSitioDisposicion();
				break;
			case 16:
				return $this->getDfrCantidadAnualResiduosBotaderoCieloAbierto();
				break;
			case 17:
				return $this->getDfrCantidadAnualResiduosRellenoSanitario();
				break;
			case 18:
				return $this->getDfrDistCentroPobladoMasCercanoSitio();
				break;
			case 19:
				return $this->getDfrDistCuerpoAguaMasCercanoSitio();
				break;
			case 20:
				return $this->getDrfAniosUtilizacionSitio();
				break;
			case 21:
				return $this->getDfrAreaDestinadaParaDisposicionSitio();
				break;
			case 22:
				return $this->getDfrSiRellenoTipoRelleno();
				break;
			case 23:
				return $this->getDfrPresenciaRecicladoresSitio();
				break;
			case 24:
				return $this->getDfrCantidadPersonasSitio();
				break;
			case 25:
				return $this->getDfrTratamientoLixiviadosSitio();
				break;
			case 26:
				return $this->getDfrTipoTratamientoLixiviadosSitio();
				break;
			case 27:
				return $this->getDfrLixiEntradaFecha();
				break;
			case 28:
				return $this->getDfrLixiEntradaCaudal();
				break;
			case 29:
				return $this->getDfrLixiEntradaDbo5();
				break;
			case 30:
				return $this->getDfrLixiEntradaSst();
				break;
			case 31:
				return $this->getDfrLixiSalidaFecha2();
				break;
			case 32:
				return $this->getDfrLixiSalidaCaudal2();
				break;
			case 33:
				return $this->getDfrLixiSalidaDbo6();
				break;
			case 34:
				return $this->getDfrLixiSalidaSst2();
				break;
			case 35:
				return $this->getDfrDescargaLixiRio();
				break;
			case 36:
				return $this->getDfrDescargaLixiLago();
				break;
			case 37:
				return $this->getDfrDescargaLixiMar();
				break;
			case 38:
				return $this->getDfrDescargaLixiSuelo();
				break;
			case 39:
				return $this->getDfrDescargaLixiRioNombre();
				break;
			case 40:
				return $this->getDfrDescargaLixiLagoNombre();
				break;
			case 41:
				return $this->getDfrDescargaLixiMarNombre();
				break;
			case 42:
				return $this->getDfrDescargaLixiSueloNombre();
				break;
			case 43:
				return $this->getDfrProgramaControlVectores();
				break;
			case 44:
				return $this->getDfrProgramaControlGases();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = DisposicionfinalresiduosaseoPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getDfrId(),
			$keys[1] => $this->getDfrAutoridadAutonomaId(),
			$keys[2] => $this->getDfrEstadoViaAccesoSitioId(),
			$keys[3] => $this->getDfrDepartamentoDispocisionId(),
			$keys[4] => $this->getDfrMunicipioDisposicionId(),
			$keys[5] => $this->getDfrTopId(),
			$keys[6] => $this->getDfrContrataDisposicionFinal(),
			$keys[7] => $this->getDfrNombreEntidadPrestadoraServicioDisposicion(),
			$keys[8] => $this->getDfrCorregimientoDisposicion(),
			$keys[9] => $this->getDfrVeredaDisposicion(),
			$keys[10] => $this->getDfrCuentaAutorizacionAmbientalDisposicion(),
			$keys[11] => $this->getDfrTipoAutorizacionAmbiental(),
			$keys[12] => $this->getDfrResolucionAutorizaDisposicion(),
			$keys[13] => $this->getDfrFechaResolucion(),
			$keys[14] => $this->getDfrFechaTerminacionResolucion(),
			$keys[15] => $this->getDfrFechaTerminacionVidaUtilSitioDisposicion(),
			$keys[16] => $this->getDfrCantidadAnualResiduosBotaderoCieloAbierto(),
			$keys[17] => $this->getDfrCantidadAnualResiduosRellenoSanitario(),
			$keys[18] => $this->getDfrDistCentroPobladoMasCercanoSitio(),
			$keys[19] => $this->getDfrDistCuerpoAguaMasCercanoSitio(),
			$keys[20] => $this->getDrfAniosUtilizacionSitio(),
			$keys[21] => $this->getDfrAreaDestinadaParaDisposicionSitio(),
			$keys[22] => $this->getDfrSiRellenoTipoRelleno(),
			$keys[23] => $this->getDfrPresenciaRecicladoresSitio(),
			$keys[24] => $this->getDfrCantidadPersonasSitio(),
			$keys[25] => $this->getDfrTratamientoLixiviadosSitio(),
			$keys[26] => $this->getDfrTipoTratamientoLixiviadosSitio(),
			$keys[27] => $this->getDfrLixiEntradaFecha(),
			$keys[28] => $this->getDfrLixiEntradaCaudal(),
			$keys[29] => $this->getDfrLixiEntradaDbo5(),
			$keys[30] => $this->getDfrLixiEntradaSst(),
			$keys[31] => $this->getDfrLixiSalidaFecha2(),
			$keys[32] => $this->getDfrLixiSalidaCaudal2(),
			$keys[33] => $this->getDfrLixiSalidaDbo6(),
			$keys[34] => $this->getDfrLixiSalidaSst2(),
			$keys[35] => $this->getDfrDescargaLixiRio(),
			$keys[36] => $this->getDfrDescargaLixiLago(),
			$keys[37] => $this->getDfrDescargaLixiMar(),
			$keys[38] => $this->getDfrDescargaLixiSuelo(),
			$keys[39] => $this->getDfrDescargaLixiRioNombre(),
			$keys[40] => $this->getDfrDescargaLixiLagoNombre(),
			$keys[41] => $this->getDfrDescargaLixiMarNombre(),
			$keys[42] => $this->getDfrDescargaLixiSueloNombre(),
			$keys[43] => $this->getDfrProgramaControlVectores(),
			$keys[44] => $this->getDfrProgramaControlGases(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = DisposicionfinalresiduosaseoPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setDfrId($value);
				break;
			case 1:
				$this->setDfrAutoridadAutonomaId($value);
				break;
			case 2:
				$this->setDfrEstadoViaAccesoSitioId($value);
				break;
			case 3:
				$this->setDfrDepartamentoDispocisionId($value);
				break;
			case 4:
				$this->setDfrMunicipioDisposicionId($value);
				break;
			case 5:
				$this->setDfrTopId($value);
				break;
			case 6:
				$this->setDfrContrataDisposicionFinal($value);
				break;
			case 7:
				$this->setDfrNombreEntidadPrestadoraServicioDisposicion($value);
				break;
			case 8:
				$this->setDfrCorregimientoDisposicion($value);
				break;
			case 9:
				$this->setDfrVeredaDisposicion($value);
				break;
			case 10:
				$this->setDfrCuentaAutorizacionAmbientalDisposicion($value);
				break;
			case 11:
				$this->setDfrTipoAutorizacionAmbiental($value);
				break;
			case 12:
				$this->setDfrResolucionAutorizaDisposicion($value);
				break;
			case 13:
				$this->setDfrFechaResolucion($value);
				break;
			case 14:
				$this->setDfrFechaTerminacionResolucion($value);
				break;
			case 15:
				$this->setDfrFechaTerminacionVidaUtilSitioDisposicion($value);
				break;
			case 16:
				$this->setDfrCantidadAnualResiduosBotaderoCieloAbierto($value);
				break;
			case 17:
				$this->setDfrCantidadAnualResiduosRellenoSanitario($value);
				break;
			case 18:
				$this->setDfrDistCentroPobladoMasCercanoSitio($value);
				break;
			case 19:
				$this->setDfrDistCuerpoAguaMasCercanoSitio($value);
				break;
			case 20:
				$this->setDrfAniosUtilizacionSitio($value);
				break;
			case 21:
				$this->setDfrAreaDestinadaParaDisposicionSitio($value);
				break;
			case 22:
				$this->setDfrSiRellenoTipoRelleno($value);
				break;
			case 23:
				$this->setDfrPresenciaRecicladoresSitio($value);
				break;
			case 24:
				$this->setDfrCantidadPersonasSitio($value);
				break;
			case 25:
				$this->setDfrTratamientoLixiviadosSitio($value);
				break;
			case 26:
				$this->setDfrTipoTratamientoLixiviadosSitio($value);
				break;
			case 27:
				$this->setDfrLixiEntradaFecha($value);
				break;
			case 28:
				$this->setDfrLixiEntradaCaudal($value);
				break;
			case 29:
				$this->setDfrLixiEntradaDbo5($value);
				break;
			case 30:
				$this->setDfrLixiEntradaSst($value);
				break;
			case 31:
				$this->setDfrLixiSalidaFecha2($value);
				break;
			case 32:
				$this->setDfrLixiSalidaCaudal2($value);
				break;
			case 33:
				$this->setDfrLixiSalidaDbo6($value);
				break;
			case 34:
				$this->setDfrLixiSalidaSst2($value);
				break;
			case 35:
				$this->setDfrDescargaLixiRio($value);
				break;
			case 36:
				$this->setDfrDescargaLixiLago($value);
				break;
			case 37:
				$this->setDfrDescargaLixiMar($value);
				break;
			case 38:
				$this->setDfrDescargaLixiSuelo($value);
				break;
			case 39:
				$this->setDfrDescargaLixiRioNombre($value);
				break;
			case 40:
				$this->setDfrDescargaLixiLagoNombre($value);
				break;
			case 41:
				$this->setDfrDescargaLixiMarNombre($value);
				break;
			case 42:
				$this->setDfrDescargaLixiSueloNombre($value);
				break;
			case 43:
				$this->setDfrProgramaControlVectores($value);
				break;
			case 44:
				$this->setDfrProgramaControlGases($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = DisposicionfinalresiduosaseoPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setDfrId($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setDfrAutoridadAutonomaId($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setDfrEstadoViaAccesoSitioId($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setDfrDepartamentoDispocisionId($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setDfrMunicipioDisposicionId($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setDfrTopId($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setDfrContrataDisposicionFinal($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setDfrNombreEntidadPrestadoraServicioDisposicion($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setDfrCorregimientoDisposicion($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setDfrVeredaDisposicion($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setDfrCuentaAutorizacionAmbientalDisposicion($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setDfrTipoAutorizacionAmbiental($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setDfrResolucionAutorizaDisposicion($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setDfrFechaResolucion($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setDfrFechaTerminacionResolucion($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setDfrFechaTerminacionVidaUtilSitioDisposicion($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setDfrCantidadAnualResiduosBotaderoCieloAbierto($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setDfrCantidadAnualResiduosRellenoSanitario($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setDfrDistCentroPobladoMasCercanoSitio($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setDfrDistCuerpoAguaMasCercanoSitio($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setDrfAniosUtilizacionSitio($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setDfrAreaDestinadaParaDisposicionSitio($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setDfrSiRellenoTipoRelleno($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setDfrPresenciaRecicladoresSitio($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setDfrCantidadPersonasSitio($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setDfrTratamientoLixiviadosSitio($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setDfrTipoTratamientoLixiviadosSitio($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setDfrLixiEntradaFecha($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setDfrLixiEntradaCaudal($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setDfrLixiEntradaDbo5($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setDfrLixiEntradaSst($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setDfrLixiSalidaFecha2($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setDfrLixiSalidaCaudal2($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setDfrLixiSalidaDbo6($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setDfrLixiSalidaSst2($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setDfrDescargaLixiRio($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setDfrDescargaLixiLago($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setDfrDescargaLixiMar($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setDfrDescargaLixiSuelo($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setDfrDescargaLixiRioNombre($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setDfrDescargaLixiLagoNombre($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setDfrDescargaLixiMarNombre($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setDfrDescargaLixiSueloNombre($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setDfrProgramaControlVectores($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setDfrProgramaControlGases($arr[$keys[44]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(DisposicionfinalresiduosaseoPeer::DATABASE_NAME);

		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_ID)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_ID, $this->dfr_id);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_AUTORIDAD_AUTONOMA_ID)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_AUTORIDAD_AUTONOMA_ID, $this->dfr_autoridad_autonoma_id);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_ESTADO_VIA_ACCESO_SITIO_ID)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_ESTADO_VIA_ACCESO_SITIO_ID, $this->dfr_estado_via_acceso_sitio_id);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DEPARTAMENTO_DISPOCISION_ID)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DEPARTAMENTO_DISPOCISION_ID, $this->dfr_departamento_dispocision_id);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_MUNICIPIO_DISPOSICION_ID)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_MUNICIPIO_DISPOSICION_ID, $this->dfr_municipio_disposicion_id);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_TOP_ID)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_TOP_ID, $this->dfr_top_id);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_CONTRATA_DISPOSICION_FINAL)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_CONTRATA_DISPOSICION_FINAL, $this->dfr_contrata_disposicion_final);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_NOMBRE_ENTIDAD_PRESTADORA_SERVICIO_DISPOSICION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_NOMBRE_ENTIDAD_PRESTADORA_SERVICIO_DISPOSICION, $this->dfr_nombre_entidad_prestadora_servicio_disposicion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_CORREGIMIENTO_DISPOSICION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_CORREGIMIENTO_DISPOSICION, $this->dfr_corregimiento_disposicion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_VEREDA_DISPOSICION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_VEREDA_DISPOSICION, $this->dfr_vereda_disposicion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_CUENTA_AUTORIZACION_AMBIENTAL_DISPOSICION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_CUENTA_AUTORIZACION_AMBIENTAL_DISPOSICION, $this->dfr_cuenta_autorizacion_ambiental_disposicion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_TIPO_AUTORIZACION_AMBIENTAL)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_TIPO_AUTORIZACION_AMBIENTAL, $this->dfr_tipo_autorizacion_ambiental);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_RESOLUCION_AUTORIZA_DISPOSICION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_RESOLUCION_AUTORIZA_DISPOSICION, $this->dfr_resolucion_autoriza_disposicion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_FECHA_RESOLUCION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_FECHA_RESOLUCION, $this->dfr_fecha_resolucion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_FECHA_TERMINACION_RESOLUCION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_FECHA_TERMINACION_RESOLUCION, $this->dfr_fecha_terminacion_resolucion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_FECHA_TERMINACION_VIDA_UTIL_SITIO_DISPOSICION)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_FECHA_TERMINACION_VIDA_UTIL_SITIO_DISPOSICION, $this->dfr_fecha_terminacion_vida_util_sitio_disposicion);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_ANUAL_RESIDUOS_BOTADERO_CIELO_ABIERTO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_ANUAL_RESIDUOS_BOTADERO_CIELO_ABIERTO, $this->dfr_cantidad_anual_residuos_botadero_cielo_abierto);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_ANUAL_RESIDUOS_RELLENO_SANITARIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_ANUAL_RESIDUOS_RELLENO_SANITARIO, $this->dfr_cantidad_anual_residuos_relleno_sanitario);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DIST_CENTRO_POBLADO_MAS_CERCANO_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DIST_CENTRO_POBLADO_MAS_CERCANO_SITIO, $this->dfr_dist_centro_poblado_mas_cercano_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DIST_CUERPO_AGUA_MAS_CERCANO_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DIST_CUERPO_AGUA_MAS_CERCANO_SITIO, $this->dfr_dist_cuerpo_agua_mas_cercano_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DRF_ANIOS_UTILIZACION_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DRF_ANIOS_UTILIZACION_SITIO, $this->drf_anios_utilizacion_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_AREA_DESTINADA_PARA_DISPOSICION_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_AREA_DESTINADA_PARA_DISPOSICION_SITIO, $this->dfr_area_destinada_para_disposicion_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_SI_RELLENO_TIPO_RELLENO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_SI_RELLENO_TIPO_RELLENO, $this->dfr_si_relleno_tipo_relleno);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_PRESENCIA_RECICLADORES_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_PRESENCIA_RECICLADORES_SITIO, $this->dfr_presencia_recicladores_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_PERSONAS_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_CANTIDAD_PERSONAS_SITIO, $this->dfr_cantidad_personas_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_TRATAMIENTO_LIXIVIADOS_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_TRATAMIENTO_LIXIVIADOS_SITIO, $this->dfr_tratamiento_lixiviados_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_TIPO_TRATAMIENTO_LIXIVIADOS_SITIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_TIPO_TRATAMIENTO_LIXIVIADOS_SITIO, $this->dfr_tipo_tratamiento_lixiviados_sitio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_FECHA)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_FECHA, $this->dfr_lixi_entrada_fecha);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_CAUDAL)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_CAUDAL, $this->dfr_lixi_entrada_caudal);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_DBO5)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_DBO5, $this->dfr_lixi_entrada_dbo5);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_SST)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_ENTRADA_SST, $this->dfr_lixi_entrada_sst);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_FECHA2)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_FECHA2, $this->dfr_lixi_salida_fecha2);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_CAUDAL2)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_CAUDAL2, $this->dfr_lixi_salida_caudal2);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_DBO6)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_DBO6, $this->dfr_lixi_salida_dbo6);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_SST2)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_LIXI_SALIDA_SST2, $this->dfr_lixi_salida_sst2);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_RIO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_RIO, $this->dfr_descarga_lixi_rio);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_LAGO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_LAGO, $this->dfr_descarga_lixi_lago);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_MAR)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_MAR, $this->dfr_descarga_lixi_mar);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_SUELO)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_SUELO, $this->dfr_descarga_lixi_suelo);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_RIO_NOMBRE)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_RIO_NOMBRE, $this->dfr_descarga_lixi_rio_nombre);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_LAGO_NOMBRE)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_LAGO_NOMBRE, $this->dfr_descarga_lixi_lago_nombre);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_MAR_NOMBRE)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_MAR_NOMBRE, $this->dfr_descarga_lixi_mar_nombre);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_SUELO_NOMBRE)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_DESCARGA_LIXI_SUELO_NOMBRE, $this->dfr_descarga_lixi_suelo_nombre);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_PROGRAMA_CONTROL_VECTORES)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_PROGRAMA_CONTROL_VECTORES, $this->dfr_programa_control_vectores);
		if ($this->isColumnModified(DisposicionfinalresiduosaseoPeer::DFR_PROGRAMA_CONTROL_GASES)) $criteria->add(DisposicionfinalresiduosaseoPeer::DFR_PROGRAMA_CONTROL_GASES, $this->dfr_programa_control_gases);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(DisposicionfinalresiduosaseoPeer::DATABASE_NAME);

		$criteria->add(DisposicionfinalresiduosaseoPeer::DFR_ID, $this->dfr_id);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getDfrId();
	}

	/**
	 * Generic method to set the primary key (dfr_id column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setDfrId($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of Disposicionfinalresiduosaseo (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setDfrAutoridadAutonomaId($this->dfr_autoridad_autonoma_id);

		$copyObj->setDfrEstadoViaAccesoSitioId($this->dfr_estado_via_acceso_sitio_id);

		$copyObj->setDfrDepartamentoDispocisionId($this->dfr_departamento_dispocision_id);

		$copyObj->setDfrMunicipioDisposicionId($this->dfr_municipio_disposicion_id);

		$copyObj->setDfrTopId($this->dfr_top_id);

		$copyObj->setDfrContrataDisposicionFinal($this->dfr_contrata_disposicion_final);

		$copyObj->setDfrNombreEntidadPrestadoraServicioDisposicion($this->dfr_nombre_entidad_prestadora_servicio_disposicion);

		$copyObj->setDfrCorregimientoDisposicion($this->dfr_corregimiento_disposicion);

		$copyObj->setDfrVeredaDisposicion($this->dfr_vereda_disposicion);

		$copyObj->setDfrCuentaAutorizacionAmbientalDisposicion($this->dfr_cuenta_autorizacion_ambiental_disposicion);

		$copyObj->setDfrTipoAutorizacionAmbiental($this->dfr_tipo_autorizacion_ambiental);

		$copyObj->setDfrResolucionAutorizaDisposicion($this->dfr_resolucion_autoriza_disposicion);

		$copyObj->setDfrFechaResolucion($this->dfr_fecha_resolucion);

		$copyObj->setDfrFechaTerminacionResolucion($this->dfr_fecha_terminacion_resolucion);

		$copyObj->setDfrFechaTerminacionVidaUtilSitioDisposicion($this->dfr_fecha_terminacion_vida_util_sitio_disposicion);

		$copyObj->setDfrCantidadAnualResiduosBotaderoCieloAbierto($this->dfr_cantidad_anual_residuos_botadero_cielo_abierto);

		$copyObj->setDfrCantidadAnualResiduosRellenoSanitario($this->dfr_cantidad_anual_residuos_relleno_sanitario);

		$copyObj->setDfrDistCentroPobladoMasCercanoSitio($this->dfr_dist_centro_poblado_mas_cercano_sitio);

		$copyObj->setDfrDistCuerpoAguaMasCercanoSitio($this->dfr_dist_cuerpo_agua_mas_cercano_sitio);

		$copyObj->setDrfAniosUtilizacionSitio($this->drf_anios_utilizacion_sitio);

		$copyObj->setDfrAreaDestinadaParaDisposicionSitio($this->dfr_area_destinada_para_disposicion_sitio);

		$copyObj->setDfrSiRellenoTipoRelleno($this->dfr_si_relleno_tipo_relleno);

		$copyObj->setDfrPresenciaRecicladoresSitio($this->dfr_presencia_recicladores_sitio);

		$copyObj->setDfrCantidadPersonasSitio($this->dfr_cantidad_personas_sitio);

		$copyObj->setDfrTratamientoLixiviadosSitio($this->dfr_tratamiento_lixiviados_sitio);

		$copyObj->setDfrTipoTratamientoLixiviadosSitio($this->dfr_tipo_tratamiento_lixiviados_sitio);

		$copyObj->setDfrLixiEntradaFecha($this->dfr_lixi_entrada_fecha);

		$copyObj->setDfrLixiEntradaCaudal($this->dfr_lixi_entrada_caudal);

		$copyObj->setDfrLixiEntradaDbo5($this->dfr_lixi_entrada_dbo5);

		$copyObj->setDfrLixiEntradaSst($this->dfr_lixi_entrada_sst);

		$copyObj->setDfrLixiSalidaFecha2($this->dfr_lixi_salida_fecha2);

		$copyObj->setDfrLixiSalidaCaudal2($this->dfr_lixi_salida_caudal2);

		$copyObj->setDfrLixiSalidaDbo6($this->dfr_lixi_salida_dbo6);

		$copyObj->setDfrLixiSalidaSst2($this->dfr_lixi_salida_sst2);

		$copyObj->setDfrDescargaLixiRio($this->dfr_descarga_lixi_rio);

		$copyObj->setDfrDescargaLixiLago($this->dfr_descarga_lixi_lago);

		$copyObj->setDfrDescargaLixiMar($this->dfr_descarga_lixi_mar);

		$copyObj->setDfrDescargaLixiSuelo($this->dfr_descarga_lixi_suelo);

		$copyObj->setDfrDescargaLixiRioNombre($this->dfr_descarga_lixi_rio_nombre);

		$copyObj->setDfrDescargaLixiLagoNombre($this->dfr_descarga_lixi_lago_nombre);

		$copyObj->setDfrDescargaLixiMarNombre($this->dfr_descarga_lixi_mar_nombre);

		$copyObj->setDfrDescargaLixiSueloNombre($this->dfr_descarga_lixi_suelo_nombre);

		$copyObj->setDfrProgramaControlVectores($this->dfr_programa_control_vectores);

		$copyObj->setDfrProgramaControlGases($this->dfr_programa_control_gases);


		$copyObj->setNew(true);

		$copyObj->setDfrId(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     Disposicionfinalresiduosaseo Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     DisposicionfinalresiduosaseoPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new DisposicionfinalresiduosaseoPeer();
		}
		return self::$peer;
	}

	/**
	 * Declares an association between this object and a Autoridadambiental object.
	 *
	 * @param      Autoridadambiental $v
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setAutoridadambiental(Autoridadambiental $v = null)
	{
		if ($v === null) {
			$this->setDfrAutoridadAutonomaId(NULL);
		} else {
			$this->setDfrAutoridadAutonomaId($v->getAuaId());
		}

		$this->aAutoridadambiental = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Autoridadambiental object, it will not be re-added.
		if ($v !== null) {
			$v->addDisposicionfinalresiduosaseo($this);
		}

		return $this;
	}


	/**
	 * Get the associated Autoridadambiental object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Autoridadambiental The associated Autoridadambiental object.
	 * @throws     PropelException
	 */
	public function getAutoridadambiental(PropelPDO $con = null)
	{
		if ($this->aAutoridadambiental === null && ($this->dfr_autoridad_autonoma_id !== null)) {
			$this->aAutoridadambiental = AutoridadambientalPeer::retrieveByPk($this->dfr_autoridad_autonoma_id);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aAutoridadambiental->addDisposicionfinalresiduosaseos($this);
			 */
		}
		return $this->aAutoridadambiental;
	}

	/**
	 * Declares an association between this object and a Estadogeneral object.
	 *
	 * @param      Estadogeneral $v
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setEstadogeneral(Estadogeneral $v = null)
	{
		if ($v === null) {
			$this->setDfrEstadoViaAccesoSitioId(NULL);
		} else {
			$this->setDfrEstadoViaAccesoSitioId($v->getEsgId());
		}

		$this->aEstadogeneral = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Estadogeneral object, it will not be re-added.
		if ($v !== null) {
			$v->addDisposicionfinalresiduosaseo($this);
		}

		return $this;
	}


	/**
	 * Get the associated Estadogeneral object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Estadogeneral The associated Estadogeneral object.
	 * @throws     PropelException
	 */
	public function getEstadogeneral(PropelPDO $con = null)
	{
		if ($this->aEstadogeneral === null && ($this->dfr_estado_via_acceso_sitio_id !== null)) {
			$this->aEstadogeneral = EstadogeneralPeer::retrieveByPk($this->dfr_estado_via_acceso_sitio_id);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aEstadogeneral->addDisposicionfinalresiduosaseos($this);
			 */
		}
		return $this->aEstadogeneral;
	}

	/**
	 * Declares an association between this object and a Departamento object.
	 *
	 * @param      Departamento $v
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setDepartamento(Departamento $v = null)
	{
		if ($v === null) {
			$this->setDfrDepartamentoDispocisionId(NULL);
		} else {
			$this->setDfrDepartamentoDispocisionId($v->getDepId());
		}

		$this->aDepartamento = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Departamento object, it will not be re-added.
		if ($v !== null) {
			$v->addDisposicionfinalresiduosaseo($this);
		}

		return $this;
	}


	/**
	 * Get the associated Departamento object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Departamento The associated Departamento object.
	 * @throws     PropelException
	 */
	public function getDepartamento(PropelPDO $con = null)
	{
		if ($this->aDepartamento === null && ($this->dfr_departamento_dispocision_id !== null)) {
			$this->aDepartamento = DepartamentoPeer::retrieveByPk($this->dfr_departamento_dispocision_id);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aDepartamento->addDisposicionfinalresiduosaseos($this);
			 */
		}
		return $this->aDepartamento;
	}

	/**
	 * Declares an association between this object and a Municipio object.
	 *
	 * @param      Municipio $v
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setMunicipio(Municipio $v = null)
	{
		if ($v === null) {
			$this->setDfrMunicipioDisposicionId(NULL);
		} else {
			$this->setDfrMunicipioDisposicionId($v->getMunId());
		}

		$this->aMunicipio = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Municipio object, it will not be re-added.
		if ($v !== null) {
			$v->addDisposicionfinalresiduosaseo($this);
		}

		return $this;
	}


	/**
	 * Get the associated Municipio object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Municipio The associated Municipio object.
	 * @throws     PropelException
	 */
	public function getMunicipio(PropelPDO $con = null)
	{
		if ($this->aMunicipio === null && ($this->dfr_municipio_disposicion_id !== null)) {
			$this->aMunicipio = MunicipioPeer::retrieveByPk($this->dfr_municipio_disposicion_id);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aMunicipio->addDisposicionfinalresiduosaseos($this);
			 */
		}
		return $this->aMunicipio;
	}

	/**
	 * Declares an association between this object and a Tecnicooperativo object.
	 *
	 * @param      Tecnicooperativo $v
	 * @return     Disposicionfinalresiduosaseo The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setTecnicooperativo(Tecnicooperativo $v = null)
	{
		if ($v === null) {
			$this->setDfrTopId(NULL);
		} else {
			$this->setDfrTopId($v->getTopId());
		}

		$this->aTecnicooperativo = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Tecnicooperativo object, it will not be re-added.
		if ($v !== null) {
			$v->addDisposicionfinalresiduosaseo($this);
		}

		return $this;
	}


	/**
	 * Get the associated Tecnicooperativo object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Tecnicooperativo The associated Tecnicooperativo object.
	 * @throws     PropelException
	 */
	public function getTecnicooperativo(PropelPDO $con = null)
	{
		if ($this->aTecnicooperativo === null && ($this->dfr_top_id !== null)) {
			$this->aTecnicooperativo = TecnicooperativoPeer::retrieveByPk($this->dfr_top_id);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aTecnicooperativo->addDisposicionfinalresiduosaseos($this);
			 */
		}
		return $this->aTecnicooperativo;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

			$this->aAutoridadambiental = null;
			$this->aEstadogeneral = null;
			$this->aDepartamento = null;
			$this->aMunicipio = null;
			$this->aTecnicooperativo = null;
	}

	// symfony_behaviors behavior
	
	/**
	 * Calls methods defined via {@link sfMixer}.
	 */
	public function __call($method, $arguments)
	{
	  if (!$callable = sfMixer::getCallable('BaseDisposicionfinalresiduosaseo:'.$method))
	  {
	    throw new sfException(sprintf('Call to undefined method BaseDisposicionfinalresiduosaseo::%s', $method));
	  }
	
	  array_unshift($arguments, $this);
	
	  return call_user_func_array($callable, $arguments);
	}

} // BaseDisposicionfinalresiduosaseo
