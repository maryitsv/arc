<?php


/**
 * This class defines the structure of the 'tecnicooperativaacueducto' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
<<<<<<< HEAD
 * 07/29/10 01:11:15
=======
<<<<<<< HEAD
 * 07/29/10 12:37:37
=======
<<<<<<< HEAD
 * 07/29/10 00:07:06
=======
 * 07/28/10 21:52:45
>>>>>>> d566463288c5b8110a13446cf8dcc22996c79238
>>>>>>> 48ea370b158b87b5f84de3ad8d71891aac6362b0
>>>>>>> 424fbbb7da7e7b7dd07c377772bb35df6fa5351d
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TecnicooperativaacueductoTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TecnicooperativaacueductoTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tecnicooperativaacueducto');
		$this->setPhpName('Tecnicooperativaacueducto');
		$this->setClassname('Tecnicooperativaacueducto');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tecnicooperativaacueducto_toa_id_seq');
		// columns
		$this->addPrimaryKey('TOA_ID', 'ToaId', 'INTEGER', true, null, null);
		$this->addForeignKey('TOA_TOP_ID', 'ToaTopId', 'INTEGER', 'tecnicooperativo', 'TOP_ID', true, null, null);
		$this->addColumn('TOA_GRAVEDAD_SIN_TRATAMIENTO', 'ToaGravedadSinTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_BOMBEO_SIN_TRATAMIENTO', 'ToaBombeoSinTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_GRAVEDAD_CON_TRATAMIENTO', 'ToaGravedadConTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_BOMBEO_CON_TRATAMIENTO', 'ToaBombeoConTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_GRAVEDAD_BOMBEO_SIN_TRATAMIENTO', 'ToaGravedadBombeoSinTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_GRAVEDAD_BOMBEO_CON_TRATAMIENTO', 'ToaGravedadBombeoConTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_GRAVEDAD_SIN_TRATAMIENTO_BOMBEO_CON_TRATAMIENTO', 'ToaGravedadSinTratamientoBombeoConTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_GRAVEDAD_CON_TRATAMIENTO_BOMBEO_SIN_TRATAMIENTO', 'ToaGravedadConTratamientoBombeoSinTratamiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_CANTIDAD_AGUA_DISTRIBUIDA_POR_ANO', 'ToaCantidadAguaDistribuidaPorAno', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_SOLUCION_ACARREO', 'ToaSolucionAcarreo', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_SOLUCION_ACARREO_VIVIENDAS', 'ToaSolucionAcarreoViviendas', 'INTEGER', false, null, null);
		$this->addColumn('TOA_SOLUCION_NACIMIENTO', 'ToaSolucionNacimiento', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_SOLUCION_NACIMIENTO_VIVIENDAS', 'ToaSolucionNacimientoViviendas', 'INTEGER', false, null, null);
		$this->addColumn('TOA_SOLUCION_ALJIBE', 'ToaSolucionAljibe', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_SOLUCION_ALJIBE_VIVIENDAS', 'ToaSolucionAljibeViviendas', 'INTEGER', false, null, null);
		$this->addColumn('TOA_SOLUCION_AGUA_LLUVIA', 'ToaSolucionAguaLluvia', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_SOLUCION_AGUA_LLUVIA_VIVIENDAS', 'ToaSolucionAguaLluviaViviendas', 'INTEGER', false, null, null);
		$this->addColumn('TOA_SOLUCION_OTRO', 'ToaSolucionOtro', 'VARCHAR', false, 255, null);
		$this->addColumn('TOA_SOLUCION_OTRO_CUAL', 'ToaSolucionOtroCual', 'VARCHAR', false, 100, null);
		$this->addColumn('TOA_SOLUCION_OTRO_VIVIENDAS', 'ToaSolucionOtroViviendas', 'INTEGER', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Tecnicooperativo', 'Tecnicooperativo', RelationMap::MANY_TO_ONE, array('toa_top_id' => 'top_id', ), 'RESTRICT', 'CASCADE');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // TecnicooperativaacueductoTableMap
