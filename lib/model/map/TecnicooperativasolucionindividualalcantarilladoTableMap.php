<?php


/**
 * This class defines the structure of the 'tecnicooperativasolucionindividualalcantarillado' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 07/29/10 16:24:28
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TecnicooperativasolucionindividualalcantarilladoTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TecnicooperativasolucionindividualalcantarilladoTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('tecnicooperativasolucionindividualalcantarillado');
		$this->setPhpName('Tecnicooperativasolucionindividualalcantarillado');
		$this->setClassname('Tecnicooperativasolucionindividualalcantarillado');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('tecnicooperativasolucionindividualalcantarillado_tosia_id_seq');
		// columns
		$this->addPrimaryKey('TOSIA_ID', 'TosiaId', 'INTEGER', true, null, null);
		$this->addForeignKey('TOSIA_OPCION1_CTDSIA_ID', 'TosiaOpcion1CtdsiaId', 'INTEGER', 'categoriadetipodesolucionindividualalcantarillado', 'CTDSIA_ID', false, null, null);
		$this->addForeignKey('TOSIA_OPCION2_CTDSIA_ID', 'TosiaOpcion2CtdsiaId', 'INTEGER', 'categoriadetipodesolucionindividualalcantarillado', 'CTDSIA_ID', false, null, null);
		$this->addForeignKey('TOSIA_OPCION3_CTDSIA_ID', 'TosiaOpcion3CtdsiaId', 'INTEGER', 'categoriadetipodesolucionindividualalcantarillado', 'CTDSIA_ID', false, null, null);
		$this->addForeignKey('TOSIA_OPCION4_CTDSIA_ID', 'TosiaOpcion4CtdsiaId', 'INTEGER', 'categoriadetipodesolucionindividualalcantarillado', 'CTDSIA_ID', false, null, null);
		$this->addForeignKey('TOSIA_OPCION5_CTDSIA_ID', 'TosiaOpcion5CtdsiaId', 'INTEGER', 'categoriadetipodesolucionindividualalcantarillado', 'CTDSIA_ID', false, null, null);
		$this->addForeignKey('TOSIA_OPCION6_CTDSIA_ID', 'TosiaOpcion6CtdsiaId', 'INTEGER', 'categoriadetipodesolucionindividualalcantarillado', 'CTDSIA_ID', false, null, null);
		$this->addColumn('TOSIA_CTDSIA_OTRO', 'TosiaCtdsiaOtro', 'VARCHAR', false, 80, null);
		$this->addColumn('TOSIA_OPCION1_NUMERO_VIVIENDAS', 'TosiaOpcion1NumeroViviendas', 'VARCHAR', false, 255, null);
		$this->addColumn('TOSIA_OPCION2_NUMERO_VIVIENDAS', 'TosiaOpcion2NumeroViviendas', 'VARCHAR', false, 255, null);
		$this->addColumn('TOSIA_OPCION3_NUMERO_VIVIENDAS', 'TosiaOpcion3NumeroViviendas', 'VARCHAR', false, 255, null);
		$this->addColumn('TOSIA_OPCION4_NUMERO_VIVIENDAS', 'TosiaOpcion4NumeroViviendas', 'VARCHAR', false, 255, null);
		$this->addColumn('TOSIA_OPCION5_NUMERO_VIVIENDAS', 'TosiaOpcion5NumeroViviendas', 'VARCHAR', false, 255, null);
		$this->addColumn('TOSIA_OPCION6_NUMERO_VIVIENDAS', 'TosiaOpcion6NumeroViviendas', 'VARCHAR', false, 255, null);
		$this->addForeignKey('TOSIA_TOP_ID', 'TosiaTopId', 'INTEGER', 'tecnicooperativo', 'TOP_ID', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('CategoriadetipodesolucionindividualalcantarilladoRelatedByTosiaOpcion1CtdsiaId', 'Categoriadetipodesolucionindividualalcantarillado', RelationMap::MANY_TO_ONE, array('tosia_opcion1_ctdsia_id' => 'ctdsia_id', ), null, 'CASCADE');
    $this->addRelation('CategoriadetipodesolucionindividualalcantarilladoRelatedByTosiaOpcion2CtdsiaId', 'Categoriadetipodesolucionindividualalcantarillado', RelationMap::MANY_TO_ONE, array('tosia_opcion2_ctdsia_id' => 'ctdsia_id', ), null, 'CASCADE');
    $this->addRelation('CategoriadetipodesolucionindividualalcantarilladoRelatedByTosiaOpcion3CtdsiaId', 'Categoriadetipodesolucionindividualalcantarillado', RelationMap::MANY_TO_ONE, array('tosia_opcion3_ctdsia_id' => 'ctdsia_id', ), null, 'CASCADE');
    $this->addRelation('CategoriadetipodesolucionindividualalcantarilladoRelatedByTosiaOpcion4CtdsiaId', 'Categoriadetipodesolucionindividualalcantarillado', RelationMap::MANY_TO_ONE, array('tosia_opcion4_ctdsia_id' => 'ctdsia_id', ), null, 'CASCADE');
    $this->addRelation('CategoriadetipodesolucionindividualalcantarilladoRelatedByTosiaOpcion5CtdsiaId', 'Categoriadetipodesolucionindividualalcantarillado', RelationMap::MANY_TO_ONE, array('tosia_opcion5_ctdsia_id' => 'ctdsia_id', ), null, 'CASCADE');
    $this->addRelation('CategoriadetipodesolucionindividualalcantarilladoRelatedByTosiaOpcion6CtdsiaId', 'Categoriadetipodesolucionindividualalcantarillado', RelationMap::MANY_TO_ONE, array('tosia_opcion6_ctdsia_id' => 'ctdsia_id', ), null, 'CASCADE');
    $this->addRelation('Tecnicooperativo', 'Tecnicooperativo', RelationMap::MANY_TO_ONE, array('tosia_top_id' => 'top_id', ), null, 'CASCADE');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // TecnicooperativasolucionindividualalcantarilladoTableMap
